import{_ as s,c as n,o as a,a as l}from"./app.2c0d76d1.js";const b=JSON.parse('{"title":"Js\u5B9E\u73B0\u6570\u7EC4\u6392\u5E8F","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u539F\u578B\u94FE\u65B9\u6CD5\u8C03\u7528","slug":"\u539F\u578B\u94FE\u65B9\u6CD5\u8C03\u7528","link":"#\u539F\u578B\u94FE\u65B9\u6CD5\u8C03\u7528","children":[]},{"level":2,"title":"\u7B80\u5355\u9009\u62E9\u6392\u5E8F","slug":"\u7B80\u5355\u9009\u62E9\u6392\u5E8F","link":"#\u7B80\u5355\u9009\u62E9\u6392\u5E8F","children":[]},{"level":2,"title":"\u5192\u6CE1\u6392\u5E8F","slug":"\u5192\u6CE1\u6392\u5E8F","link":"#\u5192\u6CE1\u6392\u5E8F","children":[]},{"level":2,"title":"\u63D2\u5165\u6392\u5E8F","slug":"\u63D2\u5165\u6392\u5E8F","link":"#\u63D2\u5165\u6392\u5E8F","children":[]},{"level":2,"title":"\u5FEB\u901F\u6392\u5E8F","slug":"\u5FEB\u901F\u6392\u5E8F","link":"#\u5FEB\u901F\u6392\u5E8F","children":[]},{"level":2,"title":"\u5E0C\u5C14\u6392\u5E8F","slug":"\u5E0C\u5C14\u6392\u5E8F","link":"#\u5E0C\u5C14\u6392\u5E8F","children":[]},{"level":2,"title":"\u5806\u6392\u5E8F","slug":"\u5806\u6392\u5E8F","link":"#\u5806\u6392\u5E8F","children":[]},{"level":2,"title":"\u5F52\u5E76\u6392\u5E8F","slug":"\u5F52\u5E76\u6392\u5E8F","link":"#\u5F52\u5E76\u6392\u5E8F","children":[]}],"relativePath":"frontend/JavaScript/Js\u5B9E\u73B0\u6570\u7EC4\u6392\u5E8F.md","lastUpdated":1661928310000}'),p={name:"frontend/JavaScript/Js\u5B9E\u73B0\u6570\u7EC4\u6392\u5E8F.md"},o=l(`<h1 id="js\u5B9E\u73B0\u6570\u7EC4\u6392\u5E8F" tabindex="-1">Js\u5B9E\u73B0\u6570\u7EC4\u6392\u5E8F <a class="header-anchor" href="#js\u5B9E\u73B0\u6570\u7EC4\u6392\u5E8F" aria-hidden="true">#</a></h1><p>\u5E38\u7528\u6392\u5E8F\u7684<code>Js</code>\u5B9E\u73B0\u65B9\u6848\uFF0C\u5305\u62EC\u539F\u578B\u94FE\u65B9\u6CD5\u8C03\u7528\u3001\u7B80\u5355\u9009\u62E9\u6392\u5E8F\u3001\u5192\u6CE1\u6392\u5E8F\u3001\u63D2\u5165\u6392\u5E8F\u3001\u5FEB\u901F\u6392\u5E8F\u3001\u5E0C\u5C14\u6392\u5E8F\u3001\u5806\u6392\u5E8F\u3001\u5F52\u5E76\u6392\u5E8F\u3002</p><h2 id="\u539F\u578B\u94FE\u65B9\u6CD5\u8C03\u7528" tabindex="-1">\u539F\u578B\u94FE\u65B9\u6CD5\u8C03\u7528 <a class="header-anchor" href="#\u539F\u578B\u94FE\u65B9\u6CD5\u8C03\u7528" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">7</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">9</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">8</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">6</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">5</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">4</span><span style="color:#C9D1D9;">];</span></span>
<span class="line"><span style="color:#C9D1D9;">arr.</span><span style="color:#D2A8FF;">sort</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">a</span><span style="color:#C9D1D9;">,</span><span style="color:#FFA657;">b</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> a</span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;">b); </span><span style="color:#8B949E;">// arr.__proto__.sort</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(arr); </span><span style="color:#8B949E;">// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="\u7B80\u5355\u9009\u62E9\u6392\u5E8F" tabindex="-1">\u7B80\u5355\u9009\u62E9\u6392\u5E8F <a class="header-anchor" href="#\u7B80\u5355\u9009\u62E9\u6392\u5E8F" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">7</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">9</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">8</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">6</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">5</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">4</span><span style="color:#C9D1D9;">];</span></span>
<span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> n </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> arr.</span><span style="color:#79C0FF;">length</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> i</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">; i</span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;">n; </span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">i){</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> minIndex </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> i;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> k</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">i</span><span style="color:#FF7B72;">+</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">; k</span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;">n; </span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">k){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;">(arr[k] </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;"> arr[minIndex]) minIndex </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> k;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">    [arr[i], arr[minIndex]] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [arr[minIndex], arr[i]];</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(arr); </span><span style="color:#8B949E;">// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span>
<span class="line"><span style="color:#8B949E;">// \u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6 O(n\xB2) \u6700\u597D\u60C5\u51B5 O(n\xB2) \u6700\u574F\u60C5\u51B5 O(n\xB2) \u7A7A\u95F4\u590D\u6742\u5EA6 O(1) \u4E0D\u7A33\u5B9A\u6392\u5E8F</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="\u5192\u6CE1\u6392\u5E8F" tabindex="-1">\u5192\u6CE1\u6392\u5E8F <a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">7</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">9</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">8</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">6</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">5</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">4</span><span style="color:#C9D1D9;">];</span></span>
<span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> n </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> arr.</span><span style="color:#79C0FF;">length</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> i</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">; i</span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;">n; </span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">i){</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> swapFlag </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> k</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">; k</span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;">n</span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;">i</span><span style="color:#FF7B72;">-</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">; </span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">k){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;">(arr[k] </span><span style="color:#FF7B72;">&gt;</span><span style="color:#C9D1D9;"> arr[k</span><span style="color:#FF7B72;">+</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">]) {</span></span>
<span class="line"><span style="color:#C9D1D9;">            swapFlag </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">            [arr[k], arr[k</span><span style="color:#FF7B72;">+</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">]] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [arr[k</span><span style="color:#FF7B72;">+</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">], arr[k]];</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">!</span><span style="color:#C9D1D9;">swapFlag) </span><span style="color:#FF7B72;">break</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(arr); </span><span style="color:#8B949E;">// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span>
<span class="line"><span style="color:#8B949E;">// \u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6 O(n\xB2) \u6700\u597D\u60C5\u51B5 O(n) \u6700\u574F\u60C5\u51B5 O(n\xB2) \u7A7A\u95F4\u590D\u6742\u5EA6 O(1) \u7A33\u5B9A\u6392\u5E8F</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u63D2\u5165\u6392\u5E8F" tabindex="-1">\u63D2\u5165\u6392\u5E8F <a class="header-anchor" href="#\u63D2\u5165\u6392\u5E8F" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">7</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">9</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">8</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">6</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">5</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">4</span><span style="color:#C9D1D9;">];</span></span>
<span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> n </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> arr.</span><span style="color:#79C0FF;">length</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> i</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">; i</span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;">n; </span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">i){</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> preIndex </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> i</span><span style="color:#FF7B72;">-</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> current </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> arr[i];</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">while</span><span style="color:#C9D1D9;">(preIndex </span><span style="color:#FF7B72;">&gt;=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">&amp;&amp;</span><span style="color:#C9D1D9;"> arr[preIndex] </span><span style="color:#FF7B72;">&gt;</span><span style="color:#C9D1D9;"> current) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        arr[preIndex</span><span style="color:#FF7B72;">+</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> arr[preIndex];</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">--</span><span style="color:#C9D1D9;">preIndex;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">    arr[preIndex</span><span style="color:#FF7B72;">+</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> current;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(arr); </span><span style="color:#8B949E;">// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span>
<span class="line"><span style="color:#8B949E;">// \u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6 O(n\xB2) \u6700\u597D\u60C5\u51B5 O(n) \u6700\u574F\u60C5\u51B5 O(n\xB2) \u7A7A\u95F4\u590D\u6742\u5EA6 O(1) \u7A33\u5B9A\u6392\u5E8F</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="\u5FEB\u901F\u6392\u5E8F" tabindex="-1">\u5FEB\u901F\u6392\u5E8F <a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">partition</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">arr</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">start</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">end</span><span style="color:#C9D1D9;">){</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> boundary </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> arr[start];</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">while</span><span style="color:#C9D1D9;">(start </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;"> end){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">while</span><span style="color:#C9D1D9;">(start </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;"> end </span><span style="color:#FF7B72;">&amp;&amp;</span><span style="color:#C9D1D9;"> arr[end] </span><span style="color:#FF7B72;">&gt;=</span><span style="color:#C9D1D9;"> boundary) </span><span style="color:#FF7B72;">--</span><span style="color:#C9D1D9;">end;</span></span>
<span class="line"><span style="color:#C9D1D9;">        arr[start] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> arr[end];</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">while</span><span style="color:#C9D1D9;">(start </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;"> end </span><span style="color:#FF7B72;">&amp;&amp;</span><span style="color:#C9D1D9;"> arr[start] </span><span style="color:#FF7B72;">&lt;=</span><span style="color:#C9D1D9;"> boundary) </span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">start;</span></span>
<span class="line"><span style="color:#C9D1D9;">        arr[end] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> arr[start];</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">    arr[start] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> boundary;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> start;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">quickSort</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">arr</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">start</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">end</span><span style="color:#C9D1D9;">){</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;">(start </span><span style="color:#FF7B72;">&gt;=</span><span style="color:#C9D1D9;"> end) </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> ;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> boundaryIndex </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">partition</span><span style="color:#C9D1D9;">(arr, start, end);</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">quickSort</span><span style="color:#C9D1D9;">(arr, start, boundaryIndex</span><span style="color:#FF7B72;">-</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">quickSort</span><span style="color:#C9D1D9;">(arr, boundaryIndex</span><span style="color:#FF7B72;">+</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, end);</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">7</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">9</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">8</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">6</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">5</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">4</span><span style="color:#C9D1D9;">];</span></span>
<span class="line"><span style="color:#D2A8FF;">quickSort</span><span style="color:#C9D1D9;">(arr, </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">, arr.</span><span style="color:#79C0FF;">length</span><span style="color:#FF7B72;">-</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(arr); </span><span style="color:#8B949E;">// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span>
<span class="line"><span style="color:#8B949E;">// \u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6 O(nlogn) \u6700\u597D\u60C5\u51B5 O(nlogn) \u6700\u574F\u60C5\u51B5 O(n\xB2) \u7A7A\u95F4\u590D\u6742\u5EA6 O(logn) \u4E0D\u7A33\u5B9A\u6392\u5E8F</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="\u5E0C\u5C14\u6392\u5E8F" tabindex="-1">\u5E0C\u5C14\u6392\u5E8F <a class="header-anchor" href="#\u5E0C\u5C14\u6392\u5E8F" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">shellSort</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">arr</span><span style="color:#C9D1D9;">){</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> n </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> arr.</span><span style="color:#79C0FF;">length</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> gap</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">n</span><span style="color:#FF7B72;">/</span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">; gap</span><span style="color:#FF7B72;">&gt;</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">; gap</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">Math.</span><span style="color:#D2A8FF;">floor</span><span style="color:#C9D1D9;">(gap</span><span style="color:#FF7B72;">/</span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">)){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> i</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">gap; i</span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;">n; </span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">i){</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> k</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">i</span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;">gap; k</span><span style="color:#FF7B72;">&gt;=</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">&amp;&amp;</span><span style="color:#C9D1D9;"> arr[k]</span><span style="color:#FF7B72;">&gt;</span><span style="color:#C9D1D9;">arr[k</span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;">gap]; k</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">k</span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;">gap){</span></span>
<span class="line"><span style="color:#C9D1D9;">                [arr[k], arr[k</span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;">gap]] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [arr[k</span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;">gap], arr[k]];</span></span>
<span class="line"><span style="color:#C9D1D9;">            }</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">7</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">9</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">8</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">6</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">5</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">4</span><span style="color:#C9D1D9;">];</span></span>
<span class="line"><span style="color:#D2A8FF;">shellSort</span><span style="color:#C9D1D9;">(arr);</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(arr); </span><span style="color:#8B949E;">// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span>
<span class="line"><span style="color:#8B949E;">// \u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6 O(nlogn) \u6700\u597D\u60C5\u51B5 O(nlog\xB2n) \u6700\u574F\u60C5\u51B5 O(nlog\xB2n) \u7A7A\u95F4\u590D\u6742\u5EA6 O(1) \u4E0D\u7A33\u5B9A\u6392\u5E8F</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="\u5806\u6392\u5E8F" tabindex="-1">\u5806\u6392\u5E8F <a class="header-anchor" href="#\u5806\u6392\u5E8F" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">adjustHeap</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">arr</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">i</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">n</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> k</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">2</span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">i</span><span style="color:#FF7B72;">+</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">; k</span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;">n; k</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">2</span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">k</span><span style="color:#FF7B72;">+</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> parent </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> arr[i];</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;">(k</span><span style="color:#FF7B72;">+</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;"> n </span><span style="color:#FF7B72;">&amp;&amp;</span><span style="color:#C9D1D9;"> arr[k] </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;"> arr[k</span><span style="color:#FF7B72;">+</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">]) </span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">k;</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;">(parent </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;"> arr[k]){</span></span>
<span class="line"><span style="color:#C9D1D9;">            [arr[i], arr[k]] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [arr[k], arr[i]];</span></span>
<span class="line"><span style="color:#C9D1D9;">            i </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> k;</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span><span style="color:#FF7B72;">else</span><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">break</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">heapSort</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">arr</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> n </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> arr.</span><span style="color:#79C0FF;">length</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> i </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> Math.</span><span style="color:#D2A8FF;">floor</span><span style="color:#C9D1D9;">(n</span><span style="color:#FF7B72;">/</span><span style="color:#79C0FF;">2</span><span style="color:#FF7B72;">-</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">); i</span><span style="color:#FF7B72;">&gt;=</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">; </span><span style="color:#FF7B72;">--</span><span style="color:#C9D1D9;">i) </span><span style="color:#D2A8FF;">adjustHeap</span><span style="color:#C9D1D9;">(arr, i, n);</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> i</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">n</span><span style="color:#FF7B72;">-</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">; i</span><span style="color:#FF7B72;">&gt;</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">; </span><span style="color:#FF7B72;">--</span><span style="color:#C9D1D9;">i){</span></span>
<span class="line"><span style="color:#C9D1D9;">        [arr[</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">], arr[i]] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [arr[i], arr[</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">]];</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#D2A8FF;">adjustHeap</span><span style="color:#C9D1D9;">(arr, </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">, i);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">7</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">9</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">8</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">6</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">5</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">4</span><span style="color:#C9D1D9;">];</span></span>
<span class="line"><span style="color:#D2A8FF;">heapSort</span><span style="color:#C9D1D9;">(arr);</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(arr); </span><span style="color:#8B949E;">// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span>
<span class="line"><span style="color:#8B949E;">// \u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6 O(nlogn) \u6700\u597D\u60C5\u51B5 O(nlogn) \u6700\u574F\u60C5\u51B5 O(nlogn) \u7A7A\u95F4\u590D\u6742\u5EA6 O(1) \u4E0D\u7A33\u5B9A\u6392\u5E8F</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="\u5F52\u5E76\u6392\u5E8F" tabindex="-1">\u5F52\u5E76\u6392\u5E8F <a class="header-anchor" href="#\u5F52\u5E76\u6392\u5E8F" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">merger</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">arr</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">start</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">mid</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">end</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">auxArr</span><span style="color:#C9D1D9;">){</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> startStroage </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> start;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> midRight </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> mid </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> count </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">while</span><span style="color:#C9D1D9;">(start </span><span style="color:#FF7B72;">&lt;=</span><span style="color:#C9D1D9;"> mid </span><span style="color:#FF7B72;">&amp;&amp;</span><span style="color:#C9D1D9;"> midRight </span><span style="color:#FF7B72;">&lt;=</span><span style="color:#C9D1D9;"> end){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;">(arr[start] </span><span style="color:#FF7B72;">&lt;=</span><span style="color:#C9D1D9;"> arr[midRight]) auxArr[count</span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> arr[start</span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">];</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">else</span><span style="color:#C9D1D9;"> auxArr[count</span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> arr[midRight</span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">];</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">while</span><span style="color:#C9D1D9;">(start</span><span style="color:#FF7B72;">&lt;=</span><span style="color:#C9D1D9;">mid) auxArr[count</span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> arr[start</span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">];</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">while</span><span style="color:#C9D1D9;">(midRight</span><span style="color:#FF7B72;">&lt;=</span><span style="color:#C9D1D9;">end) auxArr[count</span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> arr[midRight</span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">];</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> i</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">; i</span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;">count; </span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">i) arr[i</span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;">startStroage] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> auxArr[i];</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> arr;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">mergeSort</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">arr</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">start</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">end</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">auxArr</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;">(start</span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;">end) {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> mid </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> Math.</span><span style="color:#D2A8FF;">floor</span><span style="color:#C9D1D9;">((start</span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;">end)</span><span style="color:#FF7B72;">/</span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> left </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">mergeSort</span><span style="color:#C9D1D9;">(arr, start, mid, auxArr); </span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> right </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">mergeSort</span><span style="color:#C9D1D9;">(arr, mid</span><span style="color:#FF7B72;">+</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, end, auxArr); </span></span>
<span class="line"><span style="color:#C9D1D9;">    arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">merger</span><span style="color:#C9D1D9;">(arr, start, mid, end, auxArr);  </span></span>
<span class="line"><span style="color:#C9D1D9;">  }</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> arr;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">7</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">9</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">8</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">6</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">5</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">4</span><span style="color:#C9D1D9;">];</span></span>
<span class="line"><span style="color:#C9D1D9;">arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">mergeSort</span><span style="color:#C9D1D9;">(arr, </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">, arr.</span><span style="color:#79C0FF;">length</span><span style="color:#FF7B72;">-</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, []);</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(arr); </span><span style="color:#8B949E;">// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span>
<span class="line"><span style="color:#8B949E;">// \u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6 O(nlogn) \u6700\u597D\u60C5\u51B5 O(nlogn) \u6700\u574F\u60C5\u51B5 O(nlogn) \u7A7A\u95F4\u590D\u6742\u5EA6 O(n) \u7A33\u5B9A\u6392\u5E8F</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div>`,18),r=[o];function e(c,t,D,y,F,C){return a(),n("div",null,r)}const B=s(p,[["render",e]]);export{b as __pageData,B as default};
