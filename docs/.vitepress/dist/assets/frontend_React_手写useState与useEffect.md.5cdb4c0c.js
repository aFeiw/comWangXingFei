import{_ as s,c as n,o as a,a as e}from"./app.3986e506.js";const y=JSON.parse('{"title":"\u624B\u5199useState\u4E0EuseEffect","description":"","frontmatter":{},"headers":[{"level":2,"title":"useState","slug":"usestate","link":"#usestate","children":[]},{"level":2,"title":"useEffect","slug":"useeffect","link":"#useeffect","children":[]},{"level":2,"title":"\u81EA\u5B9A\u4E49Hooks","slug":"\u81EA\u5B9A\u4E49hooks","link":"#\u81EA\u5B9A\u4E49hooks","children":[]},{"level":2,"title":"\u53C2\u8003","slug":"\u53C2\u8003","link":"#\u53C2\u8003","children":[]}],"relativePath":"frontend/React/\u624B\u5199useState\u4E0EuseEffect.md","lastUpdated":1661930491000}'),l={name:"frontend/React/\u624B\u5199useState\u4E0EuseEffect.md"},p=e(`<h1 id="\u624B\u5199usestate\u4E0Euseeffect" tabindex="-1">\u624B\u5199useState\u4E0EuseEffect <a class="header-anchor" href="#\u624B\u5199usestate\u4E0Euseeffect" aria-hidden="true">#</a></h1><p><code>useState</code>\u4E0E<code>useEffect</code>\u662F\u9A71\u52A8<code>React hooks</code>\u8FD0\u884C\u7684\u57FA\u7840\uFF0C<code>useState</code>\u7528\u4E8E\u7BA1\u7406\u72B6\u6001\uFF0C<code>useEffect</code>\u7528\u4EE5\u5904\u7406\u526F\u4F5C\u7528\uFF0C\u901A\u8FC7\u624B\u5199\u7B80\u5355\u7684<code>useState</code>\u4E0E<code>useEffect</code>\u6765\u7406\u89E3\u5176\u8FD0\u884C\u539F\u7406\u3002</p><h2 id="usestate" tabindex="-1">useState <a class="header-anchor" href="#usestate" aria-hidden="true">#</a></h2><p>\u4E00\u4E2A\u7B80\u5355\u7684<code>useState</code>\u7684\u4F7F\u7528\u5982\u4E0B\u3002</p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#c9d1d9;">// App.tsx</span></span>
<span class="line"><span style="color:#c9d1d9;">import { useState } from &quot;react&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;">import &quot;./styles.css&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">export default function App() {</span></span>
<span class="line"><span style="color:#c9d1d9;">  const [count, setCount] = useState(0);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  console.log(&quot;refresh&quot;);</span></span>
<span class="line"><span style="color:#c9d1d9;">  const addCount = () =&gt; setCount(count + 1);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  return (</span></span>
<span class="line"><span style="color:#c9d1d9;">    &lt;&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;div&gt;{count}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;button onClick={addCount}&gt;Count++&lt;/button&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">    &lt;/&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">  );</span></span>
<span class="line"><span style="color:#c9d1d9;">}</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u5F53\u9875\u9762\u5728\u9996\u6B21\u6E32\u67D3\u65F6\u4F1A<code>render</code>\u6E32\u67D3<code>&lt;App /&gt;</code>\u51FD\u6570\u7EC4\u4EF6\uFF0C\u5176\u5B9E\u9645\u4E0A\u662F\u8C03\u7528<code>App()</code>\u65B9\u6CD5\uFF0C\u5F97\u5230\u865A\u62DF<code>DOM</code>\u5143\u7D20\uFF0C\u5E76\u5C06\u5176\u6E32\u67D3\u5230\u6D4F\u89C8\u5668\u9875\u9762\u4E0A\uFF0C\u5F53\u7528\u6237\u70B9\u51FB<code>button</code>\u6309\u94AE\u65F6\u4F1A\u8C03\u7528<code>addCount</code>\u65B9\u6CD5\uFF0C\u7136\u540E\u518D\u8FDB\u884C\u4E00\u6B21<code>render</code>\u6E32\u67D3<code>&lt;App /&gt;</code>\u51FD\u6570\u7EC4\u4EF6\uFF0C\u5176\u5B9E\u9645\u4E0A\u8FD8\u662F\u8C03\u7528\u4E86<code>App()</code>\u65B9\u6CD5\uFF0C\u5F97\u5230\u4E00\u4E2A\u65B0\u7684\u865A\u62DF<code>DOM</code>\u5143\u7D20\uFF0C\u7136\u540E<code>React</code>\u4F1A\u6267\u884C<code>DOM diff</code>\u7B97\u6CD5\uFF0C\u5C06\u6539\u53D8\u7684\u90E8\u5206\u66F4\u65B0\u5230\u6D4F\u89C8\u5668\u7684\u9875\u9762\u4E0A\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5B9E\u9645\u4E0A\u6BCF\u6B21<code>setCount</code>\u90FD\u4F1A\u91CD\u65B0\u6267\u884C\u8FD9\u4E2A<code>App()</code>\u51FD\u6570\uFF0C\u8FD9\u4E2A\u53EF\u4EE5\u901A\u8FC7<code>console.log(&quot;refresh&quot;)</code>\u90A3\u4E00\u884C\u770B\u5230\u6548\u679C\uFF0C\u6BCF\u6B21\u70B9\u51FB\u6309\u94AE\u63A7\u5236\u53F0\u90FD\u4F1A\u6253\u5370<code>refresh</code>\u3002<br> \u90A3\u4E48\u95EE\u9898\u6765\u4E86\uFF0C\u9875\u9762\u9996\u6B21\u6E32\u67D3\u548C\u8FDB\u884C<code>+1</code>\u64CD\u4F5C\uFF0C\u90FD\u4F1A\u8C03\u7528<code>App()</code>\u51FD\u6570\u53BB\u6267\u884C<code>const [count, setCount] = useState(0);</code>\u8FD9\u884C\u4EE3\u7801\uFF0C\u90A3\u5B83\u662F\u600E\u4E48\u505A\u5230\u5728<code>+ +</code>\u64CD\u4F5C\u540E\uFF0C\u7B2C\u4E8C\u6B21\u6E32\u67D3\u65F6\u6267\u884C\u540C\u6837\u7684\u4EE3\u7801\uFF0C\u5374\u4E0D\u5BF9\u53D8\u91CF<code>n</code>\u8FDB\u884C\u521D\u59CB\u5316\u4E5F\u5C31\u662F\u4E00\u76F4\u4E3A<code>0</code>\uFF0C\u800C\u662F\u62FF\u5230<code>n</code>\u7684\u6700\u65B0\u503C\u3002<br> \u8003\u8651\u5230\u4E0A\u8FB9\u8FD9\u4E2A\u95EE\u9898\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7B80\u5355\u5B9E\u73B0\u4E00\u4E2A<code>useMyState</code>\u51FD\u6570\uFF0C\u4E0A\u8FB9\u5728<code>Hooks</code>\u4E3A\u4EC0\u4E48\u79F0\u4E3A<code>Hooks</code>\u8FD9\u4E2A\u95EE\u9898\u4E0A\u63D0\u5230\u4E86\u53EF\u4EE5\u52FE\u8FC7\u6765\u4E00\u4E2A\u51FD\u6570\u4F5C\u7528\u57DF\u7684\u95EE\u9898\uFF0C\u90A3\u4E48\u6211\u4EEC\u4E5F\u5B8C\u5168\u53EF\u4EE5\u5B9E\u73B0\u4E00\u4E2A<code>Hooks</code>\u53BB\u52FE\u8FC7\u6765\u4E00\u4E2A\u4F5C\u7528\u57DF\uFF0C\u7B80\u5355\u6765\u8BF4\u5C31\u662F\u5728<code>useMyState</code>\u91CC\u8FB9\u4FDD\u5B58\u4E00\u4E2A\u53D8\u91CF\uFF0C\u4E5F\u5C31\u662F\u4E00\u4E2A\u95ED\u5305\u91CC\u8FB9\u4FDD\u5B58\u4E86\u8FD9\u4E2A\u53D8\u91CF\uFF0C\u7136\u540E\u8FD9\u4E2A\u53D8\u91CF\u4FDD\u5B58\u4E86\u4E0A\u6B21\u7684\u503C\uFF0C\u518D\u6B21\u8C03\u7528\u7684\u65F6\u5019\u76F4\u63A5\u53D6\u51FA\u8FD9\u4E2A\u4E4B\u524D\u4FDD\u5B58\u7684\u503C\u5373\u53EF\uFF0C<code>https://codesandbox.io/s/fancy-dust-kbd1i?file=/src/use-my-state-version-1.ts</code>\u3002</p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#c9d1d9;">// index.tsx</span></span>
<span class="line"><span style="color:#c9d1d9;">import { render } from &quot;react-dom&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;">import App from &quot;./App&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">// \u6539\u9020\u4E00\u4E0B\u8BA9\u5176\u5BFC\u51FA \u8BA9\u6211\u4EEC\u80FD\u591F\u5F3A\u884C\u5237\u65B0\`&lt;App /&gt;\`</span></span>
<span class="line"><span style="color:#c9d1d9;">export const forceRefresh = () =&gt; {</span></span>
<span class="line"><span style="color:#c9d1d9;">  console.log(&quot;Force fresh &lt;App /&gt;&quot;);</span></span>
<span class="line"><span style="color:#c9d1d9;">  const rootElement = document.getElementById(&quot;root&quot;);</span></span>
<span class="line"><span style="color:#c9d1d9;">  render(&lt;App /&gt;, rootElement);</span></span>
<span class="line"><span style="color:#c9d1d9;">};</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">forceRefresh();</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#c9d1d9;">// use-my-state-version-1.ts</span></span>
<span class="line"><span style="color:#c9d1d9;">import { forceRefresh } from &quot;./index&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">let saveState: any = null;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">export function useMyState&lt;T&gt;(state: T): [T, (newState: T) =&gt; void] {</span></span>
<span class="line"><span style="color:#c9d1d9;">  saveState = saveState || state;</span></span>
<span class="line"><span style="color:#c9d1d9;">  const rtnState: T = saveState;</span></span>
<span class="line"><span style="color:#c9d1d9;">  const setState = (newState: T): void =&gt; {</span></span>
<span class="line"><span style="color:#c9d1d9;">    saveState = newState;</span></span>
<span class="line"><span style="color:#c9d1d9;">    forceRefresh();</span></span>
<span class="line"><span style="color:#c9d1d9;">  };</span></span>
<span class="line"><span style="color:#c9d1d9;">  return [rtnState, setState];</span></span>
<span class="line"><span style="color:#c9d1d9;">}</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#c9d1d9;">// App.tsx</span></span>
<span class="line"><span style="color:#c9d1d9;">import { useMyState } from &quot;./use-my-state-version-1&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;">import &quot;./styles.css&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">export default function App() {</span></span>
<span class="line"><span style="color:#c9d1d9;">  const [count, setCount] = useMyState(0);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  console.log(&quot;refresh&quot;);</span></span>
<span class="line"><span style="color:#c9d1d9;">  const addCount = () =&gt; setCount(count + 1);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  return (</span></span>
<span class="line"><span style="color:#c9d1d9;">    &lt;&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;div&gt;{count}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;button onClick={addCount}&gt;Count++&lt;/button&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">    &lt;/&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">  );</span></span>
<span class="line"><span style="color:#c9d1d9;">}</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u53EF\u4EE5\u5728<code>code sandbox</code>\u4E2D\u770B\u5230\u73B0\u5728\u5DF2\u7ECF\u53EF\u4EE5\u5B9E\u73B0\u70B9\u51FB\u6309\u94AE\u8FDB\u884C<code>++</code>\u64CD\u4F5C\u4E86\uFF0C\u800C\u4E0D\u662F\u65E0\u8BBA\u600E\u4E48\u70B9\u51FB\u90FD\u662F<code>0</code>\uFF0C\u4F46\u662F\u4E0A\u8FB9\u7684\u60C5\u51B5\u592A\u8FC7\u4E8E\u7B80\u5355\uFF0C\u56E0\u4E3A\u53EA\u6709\u4E00\u4E2A<code>state</code>\uFF0C\u5982\u679C\u4F7F\u7528\u591A\u4E2A\u53D8\u91CF\uFF0C\u90A3\u5C31\u9700\u8981\u8C03\u7528\u4E24\u6B21<code>useState</code>\uFF0C\u6211\u4EEC\u5C31\u9700\u8981\u5BF9\u5176\u8FDB\u884C\u4E00\u4E0B\u6539\u8FDB\u4E86\uFF0C\u4E0D\u7136\u4F1A\u9020\u6210\u591A\u4E2A\u53D8\u91CF\u5B58\u5728\u4E00\u4E2A<code>saveState</code>\u4E2D\uFF0C\u8FD9\u6837\u4F1A\u4EA7\u751F\u51B2\u7A81\u8986\u76D6\u7684\u95EE\u9898\uFF0C\u6539\u8FDB\u601D\u8DEF\u6709\u4E24\u79CD:<code>1</code>\u628A\u505A\u6210\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6BD4\u5982<code>saveState = { n:0, m:0 }</code>\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u4E0D\u592A\u7B26\u5408\u9700\u6C42\uFF0C\u56E0\u4E3A\u5728\u4F7F\u7528<code>useState</code>\u7684\u65F6\u5019\u53EA\u4F1A\u4F20\u9012\u4E00\u4E2A\u521D\u59CB\u503C\u53C2\u6570\uFF0C\u4E0D\u4F1A\u4F20\u9012\u540D\u79F0; <code>2</code>\u628A<code>saveState</code>\u505A\u6210\u4E00\u4E2A\u6570\u7EC4\uFF0C\u6BD4\u5982<code>saveState:[0, 0]</code>\u3002\u5B9E\u9645\u4E0A<code>React</code>\u4E2D\u662F\u901A\u8FC7\u7C7B\u4F3C\u5355\u94FE\u8868\u7684\u5F62\u5F0F\u6765\u4EE3\u66FF\u6570\u7EC4\u7684\uFF0C\u901A\u8FC7<code>next</code>\u6309\u987A\u5E8F\u4E32\u8054\u6240\u6709\u7684<code>hook</code>\uFF0C\u4F7F\u7528\u6570\u7EC4\u4E5F\u662F\u4E00\u79CD\u7C7B\u4F3C\u7684\u64CD\u4F5C\uFF0C\u56E0\u4E3A\u4E24\u8005\u90FD\u4F9D\u8D56\u4E8E\u5B9A\u4E49<code>Hooks</code>\u7684\u987A\u5E8F\uFF0C<code>https://codesandbox.io/s/fancy-dust-kbd1i?file=/src/use-my-state-version-2.ts</code>\u3002</p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#c9d1d9;">// index.tsx</span></span>
<span class="line"><span style="color:#c9d1d9;">import { render } from &quot;react-dom&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;">import App from &quot;./App&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">// \u6539\u9020\u4E00\u4E0B\u8BA9\u5176\u5BFC\u51FA \u8BA9\u6211\u4EEC\u80FD\u591F\u5F3A\u884C\u5237\u65B0\`&lt;App /&gt;\`</span></span>
<span class="line"><span style="color:#c9d1d9;">export const forceRefresh = () =&gt; {</span></span>
<span class="line"><span style="color:#c9d1d9;">  console.log(&quot;Force fresh &lt;App /&gt;&quot;);</span></span>
<span class="line"><span style="color:#c9d1d9;">  const rootElement = document.getElementById(&quot;root&quot;);</span></span>
<span class="line"><span style="color:#c9d1d9;">  render(&lt;App /&gt;, rootElement);</span></span>
<span class="line"><span style="color:#c9d1d9;">};</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">forceRefresh();</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#c9d1d9;">// use-my-state-version-2.ts</span></span>
<span class="line"><span style="color:#c9d1d9;">import { forceRefresh } from &quot;./index&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">let saveState: any[] = [];</span></span>
<span class="line"><span style="color:#c9d1d9;">let index: number = 0;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">export function useMyState&lt;T&gt;(state: T): [T, (newState: T) =&gt; void] {</span></span>
<span class="line"><span style="color:#c9d1d9;">  const curIndex = index;</span></span>
<span class="line"><span style="color:#c9d1d9;">  index++;</span></span>
<span class="line"><span style="color:#c9d1d9;">  saveState[curIndex] = saveState[curIndex] || state;</span></span>
<span class="line"><span style="color:#c9d1d9;">  const rtnState: T = saveState[curIndex];</span></span>
<span class="line"><span style="color:#c9d1d9;">  const setState = (newState: T): void =&gt; {</span></span>
<span class="line"><span style="color:#c9d1d9;">    saveState[curIndex] = newState;</span></span>
<span class="line"><span style="color:#c9d1d9;">    index = 0; // \u5FC5\u987B\u5728\u6E32\u67D3\u524D\u540E\u5C06\`index\`\u503C\u91CD\u7F6E\u4E3A\`0\` \u4E0D\u7136\u5C31\u65E0\u6CD5\u501F\u52A9\u8C03\u7528\u987A\u5E8F\u786E\u5B9A\`Hooks\`\u4E86</span></span>
<span class="line"><span style="color:#c9d1d9;">    forceRefresh();</span></span>
<span class="line"><span style="color:#c9d1d9;">  };</span></span>
<span class="line"><span style="color:#c9d1d9;">  return [rtnState, setState];</span></span>
<span class="line"><span style="color:#c9d1d9;">}</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#c9d1d9;">// App.tsx</span></span>
<span class="line"><span style="color:#c9d1d9;">import { useMyState } from &quot;./use-my-state-version-2&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;">import &quot;./styles.css&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">export default function App() {</span></span>
<span class="line"><span style="color:#c9d1d9;">  const [count1, setCount1] = useMyState(0);</span></span>
<span class="line"><span style="color:#c9d1d9;">  const [count2, setCount2] = useMyState(0);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  console.log(&quot;refresh&quot;);</span></span>
<span class="line"><span style="color:#c9d1d9;">  const addCount1 = () =&gt; setCount1(count1 + 1);</span></span>
<span class="line"><span style="color:#c9d1d9;">  const addCount2 = () =&gt; setCount2(count2 + 1);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  return (</span></span>
<span class="line"><span style="color:#c9d1d9;">    &lt;&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;div&gt;{count1}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;button onClick={addCount1}&gt;Count1++&lt;/button&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;div&gt;{count2}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;button onClick={addCount2}&gt;Count2++&lt;/button&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">    &lt;/&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">  );</span></span>
<span class="line"><span style="color:#c9d1d9;">}</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\u5DF2\u7ECF\u53EF\u4EE5\u5B9E\u73B0\u5728\u591A\u4E2A<code>State</code>\u4E0B\u7684\u72EC\u7ACB\u7684\u72B6\u6001\u66F4\u65B0\u4E86\uFF0C\u90A3\u4E48\u95EE\u9898\u53C8\u53C8\u6765\u4E86\uFF0C<code>&lt;App /&gt;</code>\u7528\u4E86<code>saveState</code>\u548C<code>index</code>\uFF0C\u90A3\u5176\u4ED6\u7EC4\u4EF6\u7528\u4EC0\u4E48\uFF0C\u4E5F\u5C31\u662F\u8BF4\u591A\u4E2A\u7EC4\u4EF6\u5982\u679C\u89E3\u51B3\u6BCF\u4E2A\u7EC4\u4EF6\u72EC\u7ACB\u7684\u4F5C\u7528\u57DF\uFF0C\u89E3\u51B3\u529E\u6CD5<code>1</code>\u6BCF\u4E2A\u7EC4\u4EF6\u90FD\u521B\u5EFA\u4E00\u4E2A<code>saveState</code>\u548C<code>index</code>\uFF0C\u4F46\u662F\u51E0\u4E2A\u7EC4\u4EF6\u5728\u4E00\u4E2A\u6587\u4EF6\u4E2D\u53C8\u4F1A\u5BFC\u81F4<code>saveState</code>\u3001<code>index</code>\u51B2\u7A81\u3002\u89E3\u51B3\u529E\u6CD5<code>2</code>\u653E\u5728\u7EC4\u4EF6\u5BF9\u5E94\u7684\u865A\u62DF\u8282\u70B9\u5BF9\u8C61\u4E0A\uFF0C<code>React</code>\u91C7\u7528\u7684\u4E5F\u662F\u8FD9\u79CD\u65B9\u6848\uFF0C\u5C06<code>saveState</code>\u548C<code>index</code>\u53D8\u91CF\u653E\u5728\u7EC4\u4EF6\u5BF9\u5E94\u7684\u865A\u62DF\u8282\u70B9\u5BF9\u8C61<code>FiberNode</code>\u4E0A\uFF0C\u5728<code>React</code>\u4E2D\u5177\u4F53\u5B9E\u73B0<code>saveState</code>\u53EB\u505A<code>memoizedState</code>\uFF0C\u5B9E\u9645\u4E0A<code>React</code>\u4E2D\u662F\u901A\u8FC7\u7C7B\u4F3C\u5355\u94FE\u8868\u7684\u5F62\u5F0F\u6765\u4EE3\u66FF\u6570\u7EC4\u7684\uFF0C\u901A\u8FC7<code>next</code>\u6309\u987A\u5E8F\u4E32\u8054\u6240\u6709\u7684<code>hook</code>\u3002<br> \u53EF\u4EE5\u770B\u51FA<code>useState</code>\u662F\u5F3A\u4F9D\u8D56\u4E8E\u5B9A\u4E49\u7684\u987A\u5E8F\u7684\uFF0C<code>useState</code>\u6570\u7EC4\u4E2D\u4FDD\u5B58\u7684\u987A\u5E8F\u975E\u5E38\u91CD\u8981\u5728\u6267\u884C\u51FD\u6570\u7EC4\u4EF6\u7684\u65F6\u5019\u53EF\u4EE5\u901A\u8FC7\u4E0B\u6807\u7684\u81EA\u589E\u83B7\u53D6\u5BF9\u5E94\u7684<code>state</code>\u503C\uFF0C\u7531\u4E8E\u662F\u901A\u8FC7\u987A\u5E8F\u83B7\u53D6\u7684\uFF0C\u8FD9\u5C06\u4F1A\u5F3A\u5236\u8981\u6C42\u4F60\u4E0D\u5141\u8BB8\u66F4\u6539<code>useState</code>\u7684\u987A\u5E8F\uFF0C\u4F8B\u5982\u4F7F\u7528\u6761\u4EF6\u5224\u65AD\u662F\u5426\u6267\u884C<code>useState</code>\u8FD9\u6837\u4F1A\u5BFC\u81F4\u6309\u987A\u5E8F\u83B7\u53D6\u5230\u7684\u503C\u4E0E\u9884\u671F\u7684\u503C\u4E0D\u540C\uFF0C\u8FD9\u4E2A\u95EE\u9898\u4E5F\u51FA\u73B0\u5728\u4E86<code>React.useState</code>\u81EA\u5DF1\u8EAB\u4E0A\uFF0C\u56E0\u6B64<code>React</code>\u662F\u4E0D\u5141\u8BB8\u4F60\u4F7F\u7528\u6761\u4EF6\u5224\u65AD\u53BB\u63A7\u5236\u51FD\u6570\u7EC4\u4EF6\u4E2D\u7684<code>useState</code>\u7684\u987A\u5E8F\u7684\uFF0C\u8FD9\u4F1A\u5BFC\u81F4\u83B7\u53D6\u5230\u7684\u503C\u6DF7\u4E71\uFF0C\u7C7B\u4F3C\u4E8E\u4E0B\u8FB9\u7684\u4EE3\u7801\u5219\u4F1A\u629B\u51FA\u5F02\u5E38\u3002</p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#c9d1d9;">const App = () =&gt; {</span></span>
<span class="line"><span style="color:#c9d1d9;">    let state;</span></span>
<span class="line"><span style="color:#c9d1d9;">    if(true){</span></span>
<span class="line"><span style="color:#c9d1d9;">        [state, setState] = React.useState(0);</span></span>
<span class="line"><span style="color:#c9d1d9;">    }</span></span>
<span class="line"><span style="color:#c9d1d9;">    return (</span></span>
<span class="line"><span style="color:#c9d1d9;">        &lt;div&gt;{state}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">    )</span></span>
<span class="line"><span style="color:#c9d1d9;">}</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">&lt;!-- React Hook &quot;React.useState&quot; is called conditionally. React Hooks must be called in the exact same order in every component render  react-hooks/rules-of-hooks--&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8FD9\u91CC\u5F53\u7136\u53EA\u662F\u5BF9\u4E8E<code>useState</code>\u7684\u7B80\u5355\u5B9E\u73B0\uFF0C\u5BF9\u4E8E<code>React</code>\u771F\u6B63\u7684\u5B9E\u73B0\u53EF\u4EE5\u53C2\u8003<code>packages/react-reconciler/src/ReactFiberHooks.js</code>\uFF0C\u5F53\u524D\u7684<code>React</code>\u7248\u672C\u662F<code>16.10.2</code>\uFF0C\u4E5F\u53EF\u4EE5\u7B80\u7565\u770B\u4E00\u4E0B\u76F8\u5173\u7684<code>type</code>\u3002</p><div class="language-ts line-numbers-mode"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#FF7B72;">type</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">Hooks</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">memoizedState</span><span style="color:#FF7B72;">:</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">any</span><span style="color:#C9D1D9;">, </span><span style="color:#8B949E;">// \u6307\u5411\u5F53\u524D\u6E32\u67D3\u8282\u70B9\`Fiber\` \u4E0A\u4E00\u6B21\u5B8C\u6574\u66F4\u65B0\u4E4B\u540E\u7684\u6700\u7EC8\u72B6\u6001\u503C</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">baseState</span><span style="color:#FF7B72;">:</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">any</span><span style="color:#C9D1D9;">, </span><span style="color:#8B949E;">// \u521D\u59CB\u5316\`initialState\` \u5DF2\u7ECF\u6BCF\u6B21\`dispatch\`\u4E4B\u540E\`newState\`</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">baseUpdate</span><span style="color:#FF7B72;">:</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">Update</span><span style="color:#C9D1D9;">&lt;</span><span style="color:#79C0FF;">any</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#FF7B72;">|</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;">, </span><span style="color:#8B949E;">// \u5F53\u524D\u9700\u8981\u66F4\u65B0\u7684\`Update\` \u6BCF\u6B21\u66F4\u65B0\u5B8C\u4E4B\u540E\u4F1A\u8D4B\u503C\u4E0A\u4E00\u4E2A\`update\` \u65B9\u4FBF\`react\`\u5728\u6E32\u67D3\u9519\u8BEF\u7684\u8FB9\u7F18\u6570\u636E\u56DE\u6EAF</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">queue</span><span style="color:#FF7B72;">:</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">UpdateQueue</span><span style="color:#C9D1D9;">&lt;</span><span style="color:#79C0FF;">any</span><span style="color:#C9D1D9;">&gt; </span><span style="color:#FF7B72;">|</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;">, </span><span style="color:#8B949E;">// \u7F13\u5B58\u7684\u66F4\u65B0\u961F\u5217 \u5B58\u50A8\u591A\u6B21\u66F4\u65B0\u884C\u4E3A</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">next</span><span style="color:#FF7B72;">:</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">Hook</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">|</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;">, </span><span style="color:#8B949E;">// \`link\`\u5230\u4E0B\u4E00\u4E2A\`hooks\` \u901A\u8FC7\`next\`\u4E32\u8054\u6240\u6709\`hooks\`</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="useeffect" tabindex="-1">useEffect <a class="header-anchor" href="#useeffect" aria-hidden="true">#</a></h2><p>\u4E00\u4E2A\u7B80\u5355\u7684<code>useEffect</code>\u7684\u4F7F\u7528\u5982\u4E0B\u3002</p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#c9d1d9;">import { useEffect, useState } from &quot;react&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;">import &quot;./styles.css&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">export default function App() {</span></span>
<span class="line"><span style="color:#c9d1d9;">  const [count1, setCount1] = useState(0);</span></span>
<span class="line"><span style="color:#c9d1d9;">  const [count2, setCount2] = useState(0);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  console.log(&quot;refresh&quot;);</span></span>
<span class="line"><span style="color:#c9d1d9;">  const addCount1 = () =&gt; setCount1(count1 + 1);</span></span>
<span class="line"><span style="color:#c9d1d9;">  const addCount2 = () =&gt; setCount2(count2 + 1);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  useEffect(() =&gt; {</span></span>
<span class="line"><span style="color:#c9d1d9;">    console.log(&quot;count1 -&gt; effect&quot;, count1);</span></span>
<span class="line"><span style="color:#c9d1d9;">  }, [count1]);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  return (</span></span>
<span class="line"><span style="color:#c9d1d9;">    &lt;&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;div&gt;{count1}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;button onClick={addCount1}&gt;Count1++&lt;/button&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;div&gt;{count2}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;button onClick={addCount2}&gt;Count2++&lt;/button&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">    &lt;/&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">  );</span></span>
<span class="line"><span style="color:#c9d1d9;">}</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u540C\u6837\uFF0C\u6BCF\u6B21<code>addCount1</code>\u90FD\u4F1A\u91CD\u65B0\u6267\u884C\u8FD9\u4E2A<code>App()</code>\u51FD\u6570\uFF0C\u6BCF\u6B21\u70B9\u51FB\u6309\u94AE\u63A7\u5236\u53F0\u90FD\u4F1A\u6253\u5370<code>refresh</code>\uFF0C\u5728\u8FD9\u91CC\u8FD8\u901A\u8FC7<code>count1</code>\u53D8\u52A8\u7684\u526F\u4F5C\u7528\u6765\u6253\u5370\u4E86<code>count1 -&gt; effect \${count1}</code>\uFF0C\u800C\u70B9\u51FB<code>addCount2</code>\u5374\u4E0D\u4F1A\u5904\u7F5A\u526F\u4F5C\u7528\u7684\u6253\u5370\uFF0C\u539F\u56E0\u660E\u663E\u662F\u6211\u4EEC\u53EA\u6307\u5B9A\u4E86<code>count1</code>\u7684\u526F\u4F5C\u7528\uFF0C\u7531\u6B64\u53EF\u89C1\u53EF\u4EE5\u901A\u8FC7<code>useEffect</code>\u6765\u5B9E\u73B0\u66F4\u7EC6\u7C92\u5EA6\u7684\u526F\u4F5C\u7528\u5904\u7406\u3002<br> \u5728\u8FD9\u91CC\u6211\u4EEC\u4F9D\u65E7\u5EF6\u7EED\u4E0A\u8FB9<code>useState</code>\u7684\u5B9E\u73B0\u601D\u8DEF\uFF0C\u5C06\u4E4B\u524D\u7684\u6570\u636E\u5B58\u50A8\u8D77\u6765\uFF0C\u4E4B\u540E\u5F53\u51FD\u6570\u6267\u884C\u7684\u65F6\u5019\u6211\u4EEC\u5BF9\u6BD4\u8FD9\u5176\u4E2D\u7684\u6570\u636E\u662F\u5426\u53D1\u751F\u4E86\u53D8\u52A8\uFF0C\u5982\u679C\u53D1\u751F\u4E86\u53D8\u52A8\uFF0C\u90A3\u4E48\u6211\u4EEC\u4FBF\u6267\u884C\u8BE5\u51FD\u6570\uFF0C\u5F53\u7136\u6211\u4EEC\u8FD8\u9700\u8981\u5B8C\u6210\u526F\u4F5C\u7528\u6E05\u9664\u7684\u529F\u80FD\uFF0C<code>https://codesandbox.io/s/react-usestate-8v0li9?file=/src/use-my-effect.ts</code>\u3002</p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#c9d1d9;">// use-my-effect.ts</span></span>
<span class="line"><span style="color:#c9d1d9;">const dependencyList: unknown[][] = [];</span></span>
<span class="line"><span style="color:#c9d1d9;">const clearCallbacks: (void | (() =&gt; void))[] = [];</span></span>
<span class="line"><span style="color:#c9d1d9;">let index: number = 0;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">export function useMyEffect(</span></span>
<span class="line"><span style="color:#c9d1d9;">  callback: () =&gt; void | (() =&gt; void),</span></span>
<span class="line"><span style="color:#c9d1d9;">  deps: unknown[]</span></span>
<span class="line"><span style="color:#c9d1d9;">): void {</span></span>
<span class="line"><span style="color:#c9d1d9;">  const curIndex = index;</span></span>
<span class="line"><span style="color:#c9d1d9;">  index++;</span></span>
<span class="line"><span style="color:#c9d1d9;">  const lastDeps = dependencyList[curIndex];</span></span>
<span class="line"><span style="color:#c9d1d9;">  const changed =</span></span>
<span class="line"><span style="color:#c9d1d9;">    !lastDeps || !deps || deps.some((dep, i) =&gt; dep !== lastDeps[i]);</span></span>
<span class="line"><span style="color:#c9d1d9;">  if (changed) {</span></span>
<span class="line"><span style="color:#c9d1d9;">    dependencyList[curIndex] = deps;</span></span>
<span class="line"><span style="color:#c9d1d9;">    const clearCallback = clearCallbacks[curIndex];</span></span>
<span class="line"><span style="color:#c9d1d9;">    if (clearCallback) clearCallback();</span></span>
<span class="line"><span style="color:#c9d1d9;">    clearCallbacks[curIndex] = callback();</span></span>
<span class="line"><span style="color:#c9d1d9;">  }</span></span>
<span class="line"><span style="color:#c9d1d9;">}</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">export function clearEffectIndex() {</span></span>
<span class="line"><span style="color:#c9d1d9;">  index = 0;</span></span>
<span class="line"><span style="color:#c9d1d9;">}</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#c9d1d9;">// App.tsx</span></span>
<span class="line"><span style="color:#c9d1d9;">import { useState } from &quot;react&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;">import { useMyEffect, clearEffectIndex } from &quot;./use-my-effect&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;">import &quot;./styles.css&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">export default function App() {</span></span>
<span class="line"><span style="color:#c9d1d9;">  const [count1, setCount1] = useState(0);</span></span>
<span class="line"><span style="color:#c9d1d9;">  const [count2, setCount2] = useState(0);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  console.log(&quot;refresh&quot;);</span></span>
<span class="line"><span style="color:#c9d1d9;">  const addCount1 = () =&gt; setCount1(count1 + 1);</span></span>
<span class="line"><span style="color:#c9d1d9;">  const addCount2 = () =&gt; setCount2(count2 + 1);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  useMyEffect(() =&gt; {</span></span>
<span class="line"><span style="color:#c9d1d9;">    console.log(&quot;count1 -&gt; effect&quot;, count1);</span></span>
<span class="line"><span style="color:#c9d1d9;">    console.log(&quot;setTimeout&quot;, count1);</span></span>
<span class="line"><span style="color:#c9d1d9;">    return () =&gt; console.log(&quot;clear setTimeout&quot;, count1);</span></span>
<span class="line"><span style="color:#c9d1d9;">  }, [count1]);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  useMyEffect(() =&gt; {</span></span>
<span class="line"><span style="color:#c9d1d9;">    console.log(&quot;count2 -&gt; effect&quot;, count2);</span></span>
<span class="line"><span style="color:#c9d1d9;">  }, [count2]);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  clearEffectIndex();</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  return (</span></span>
<span class="line"><span style="color:#c9d1d9;">    &lt;&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;div&gt;{count1}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;button onClick={addCount1}&gt;Count1++&lt;/button&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;div&gt;{count2}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;button onClick={addCount2}&gt;Count2++&lt;/button&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">    &lt;/&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">  );</span></span>
<span class="line"><span style="color:#c9d1d9;">}</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>\u901A\u8FC7\u4E0A\u8FB9\u7684\u5B9E\u73B0\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u901A\u8FC7\u5C06\u4F9D\u8D56\u4E0E\u526F\u4F5C\u7528\u6E05\u9664\u51FD\u6570\u5B58\u8D77\u6765\u7684\u65B9\u5F0F\uFF0C\u6765\u5B9E\u73B0<code>useEffect</code>\uFF0C\u901A\u8FC7\u5BF9\u6BD4\u4E0A\u4E00\u6B21\u4F20\u9012\u7684\u4F9D\u8D56\u503C\u4E0E\u5F53\u524D\u4F20\u9012\u7684\u4F9D\u8D56\u503C\u662F\u5426\u76F8\u540C\uFF0C\u6765\u51B3\u5B9A\u662F\u5426\u6267\u884C\u4F20\u9012\u8FC7\u6765\u7684\u51FD\u6570\uFF0C\u5728\u8FD9\u91CC\u7531\u4E8E\u6211\u4EEC\u65E0\u6CD5\u5F97\u77E5\u8FD9\u4E2A<code>React.Fc</code>\u7EC4\u4EF6\u51FD\u6570\u662F\u5728\u4EC0\u4E48\u65F6\u5019\u5B8C\u6210\u6700\u540E\u4E00\u4E2A<code>Effect</code>\uFF0C\u6211\u4EEC\u5C31\u9700\u8981\u624B\u52A8\u6765\u8D4B\u503C\u8FD9\u4E2A\u6807\u8BB0\u7684<code>index</code>\u4E3A<code>0</code>\u3002\u5F53\u7136\u5728<code>React</code>\u4E4B\u4E2D\u540C\u6837\u4E5F\u662F\u5C06<code>useEffect</code>\u6302\u8F7D\u5230\u4E86<code>Fiber</code>\u4E0A\u6765\u5B9E\u73B0\u7684\uFF0C\u5E76\u4E14\u5C06\u6240\u9700\u8981\u7684\u4F9D\u8D56\u503C\u5B58\u50A8\u5728\u5F53\u524D\u7684<code>Fiber</code>\u7684<code>memorizedState</code>\u4E2D\uFF0C\u901A\u8FC7\u5B9E\u73B0\u7684\u94FE\u8868\u4EE5\u53CA\u5224\u65AD\u521D\u6B21\u52A0\u8F7D\u6765\u5B9E\u73B0\u4E86\u901A\u8FC7<code>next</code>\u6309\u987A\u5E8F\u4E32\u8054\u6240\u6709\u7684<code>hooks</code>\uFF0C\u8FD9\u6837\u4E5F\u5C31\u80FD\u77E5\u9053\u7A76\u7ADF\u54EA\u4E2A\u662F\u6700\u540E\u4E00\u4E2A<code>Hooks</code>\u4E86\uFF0C\u53E6\u5916<code>useEffect</code>\u540C\u6837\u4E5F\u662F\u5F3A\u4F9D\u8D56\u4E8E\u5B9A\u4E49\u7684\u987A\u5E8F\u7684\uFF0C\u80FD\u591F\u8BA9<code>React</code>\u5BF9\u9F50\u591A\u6B21\u6267\u884C\u7EC4\u4EF6\u51FD\u6570\u65F6\u7684\u4F9D\u8D56\u3002</p><h2 id="\u81EA\u5B9A\u4E49hooks" tabindex="-1">\u81EA\u5B9A\u4E49Hooks <a class="header-anchor" href="#\u81EA\u5B9A\u4E49hooks" aria-hidden="true">#</a></h2><p>\u6211\u5728\u521D\u5B66<code>Hooks</code>\u7684\u65F6\u5019\u4E00\u76F4\u6709\u4E00\u4E2A\u7591\u95EE\uFF0C\u5BF9\u4E8E<code>React Hooks</code>\u7684\u4F7F\u7528\u4E0E\u666E\u901A\u7684\u51FD\u6570\u8C03\u7528\u533A\u522B\u7A76\u7ADF\u5728\u54EA\u91CC\uFF0C\u5F53\u65F6\u6211\u8FD8\u5BF9\u77E5\u4E4E\u7684\u67D0\u4E2A\u95EE\u9898\u5F3A\u7B54\u4E86\u4E00\u756A\u3002</p><p>\u4EE5\u6211\u5B66\u4E86\u51E0\u5929<code>React</code>\u7684\u7406\u89E3\uFF0C\u81EA\u5B9A\u4E49<code>Hooks</code>\u8DDF\u666E\u901A\u51FD\u6570\u533A\u522B\u5728\u4E8E:</p><ul><li><code>Hooks</code>\u53EA\u5E94\u8BE5\u5728<code>React</code>\u51FD\u6570\u7EC4\u4EF6\u5185\u8C03\u7528\uFF0C\u800C\u4E0D\u5E94\u8BE5\u5728\u666E\u901A\u51FD\u6570\u8C03\u7528\u3002</li><li><code>Hooks</code>\u80FD\u591F\u8C03\u7528\u8BF8\u5982<code>useState</code>\u3001<code>useEffect</code>\u3001<code>useContext</code>\u7B49\uFF0C\u666E\u901A\u51FD\u6570\u5219\u4E0D\u80FD\u3002</li></ul><p>\u7531\u6B64\u89C9\u5F97<code>Hooks</code>\u5C31\u50CF<code>mixin</code>\uFF0C\u662F\u5728\u7EC4\u4EF6\u4E4B\u95F4\u5171\u4EAB\u6709\u72B6\u6001\u548C\u526F\u4F5C\u7528\u7684\u65B9\u5F0F\uFF0C\u6240\u4EE5\u5E94\u8BE5\u662F\u5E94\u8BE5\u5728\u51FD\u6570\u7EC4\u4EF6\u4E2D\u7528\u5230\u7684\u4E0E\u7EC4\u4EF6\u751F\u547D\u5468\u671F\u7B49\u76F8\u5173\u7684\u51FD\u6570\u624D\u80FD\u79F0\u4E3A<code>Hooks</code>\uFF0C\u800C\u4E0D\u4EC5\u4EC5\u662F\u666E\u901A\u7684<code>utils</code>\u51FD\u6570\u3002<br> \u5BF9\u4E8E\u7B2C\u4E00\u4E2A\u95EE\u9898\uFF0C\u5982\u679C\u5C06\u5176\u58F0\u660E\u4E3A<code>Hooks</code>\u4F46\u662F\u5E76\u6CA1\u6709\u8D77\u5230\u4F5C\u4E3AHooks\u7684\u529F\u80FD\uFF0C\u90A3\u4E48\u79C1\u8BA4\u4E3A\u4E0D\u80FD\u79F0\u4E3A<code>Hooks</code>\uFF0C\u4E3A\u907F\u514D\u6DF7\u6DC6\uFF0C\u8FD8\u662F\u5EFA\u8BAE\u5728\u8C03\u7528\u5176\u4ED6<code>Hooks</code>\u7684\u65F6\u5019\u518D\u4F7F\u7528<code>use</code>\u6807\u8BC6\u3002\u5F53\u7136\uFF0C\u8BF8\u5982\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2A<code>useState</code>\u529F\u80FD\u8FD9\u79CD\u867D\u7136\u5E76\u6CA1\u6709\u8C03\u7528\u5176\u4ED6\u7684<code>Hooks</code>\uFF0C\u4F46\u662F\u4ED6\u4E0E\u51FD\u6570\u7EC4\u4EF6\u7684\u529F\u80FD\u5F3A\u76F8\u5173\uFF0C\u80AF\u5B9A\u662F\u5C5E\u4E8E<code>Hooks</code>\u7684\u3002<br> \u5BF9\u4E8E\u7B2C\u4E8C\u4E2A\u95EE\u9898\u7684\u8BDD\uFF0C\u5176\u5B9E\u5FC5\u987B\u4F7F\u7528<code>use</code>\u5F00\u5934\u5E76\u4E0D\u662F\u4E00\u4E2A\u8BED\u6CD5\u6216\u8005\u4E00\u4E2A\u5F3A\u5236\u6027\u7684\u65B9\u6848\uFF0C \u4EE5<code>use</code>\u5F00\u5934\u5176\u5B9E\u66F4\u50CF\u662F\u4E00\u4E2A\u7EA6\u5B9A\uFF0C\u5C31\u50CF\u662F<code>GET</code>\u8BF7\u6C42\u7EA6\u5B9A\u8BED\u4E49\u4E0D\u643A\u5E26<code>Body</code>\u4E00\u6837\uFF0C \u5176\u4E3B\u8981\u76EE\u7684\u8FD8\u662F\u4E3A\u4E86\u7EA6\u675F\u8BED\u6CD5\uFF0C\u5982\u679C\u4F60\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2A\u7C7B\u4F3C<code>useState</code>\u7B80\u5355\u529F\u80FD\u7684\u8BDD\uFF0C\u5C31\u4F1A\u4E86\u89E3\u5230\u4E3A\u4EC0\u4E48\u4E0D\u80FD\u591F\u51FA\u73B0\u7C7B\u4F3C\u4E8E<code>if (xxx) const [a, setA] = useState(0);</code>\u8FD9\u6837\u7684\u4EE3\u7801\u4E86\uFF0C<code>React</code>\u6587\u6863\u4E2D\u660E\u786E\u8BF4\u660E\u4E86\u4F7F\u7528<code>Hooks</code>\u7684\u89C4\u5219\uFF0C\u4F7F\u7528<code>use</code>\u5F00\u5934\u7684\u76EE\u7684\u5C31\u662F\u8BA9<code>React</code>\u8BC6\u522B\u51FA\u6765\u8FD9\u662F\u4E2A<code>Hooks</code>\uFF0C\u4ECE\u800C\u68C0\u67E5\u8FD9\u4E9B\u89C4\u5219\u7EA6\u675F\uFF0C\u901A\u5E38\u4E5F\u4F1A\u4F7F\u7528<code>ESlint</code>\u914D\u5408<code>eslint-plugin-react-hooks</code>\u68C0\u67E5\u8FD9\u4E9B\u89C4\u5219\u3002</p><p>\u540E\u6765\u5BF9\u4E8E\u8FD9\u4E2A\u95EE\u9898\u6709\u4E86\u65B0\u7684\u7406\u89E3\uFF0C\u5982\u679C\u5B9A\u4E49\u4E00\u4E2A\u771F\u6B63\u7684\u81EA\u5B9A\u4E49<code>Hooks</code>\u7684\u8BDD\uFF0C\u90A3\u4E48\u901A\u5E38\u90FD\u4F1A\u9700\u8981\u4F7F\u7528<code>useState</code>\u3001<code>useEffect</code>\u7B49<code>Hooks</code>\uFF0C\u5C31\u76F8\u5F53\u4E8E\u81EA\u5B9A\u4E49<code>Hooks</code>\u662F\u7531\u5B98\u65B9\u7684<code>Hooks</code>\u7EC4\u5408\u800C\u6210\u7684\uFF0C\u800C\u901A\u8FC7\u5B98\u65B9\u7684\u8FD9\u4E9B<code>Hooks</code>\u6765\u7EC4\u5408\u7684\u8BDD\uFF0C\u5C31\u53EF\u4EE5\u5B9E\u73B0\u5C06\u6570\u636E\u6302\u8F7D\u5230\u8282\u70B9\u4E0A\uFF0C\u4E5F\u5C31\u662F\u4E0A\u8FB9\u7684\u5B9E\u73B0\u63D0\u5230\u7684\u5B9E\u9645<code>memorizedState</code>\u90FD\u662F\u5728<code>Fiber</code>\u4E2D\u7684\uFF0C\u800C\u81EA\u884C\u5B9E\u73B0\u7684\u51FD\u6570\u4F8B\u5982\u4E0A\u8FB9\u7684<code>Hooks</code>\u5B9E\u73B0\uFF0C\u662F\u65E0\u6CD5\u505A\u5230\u8FD9\u4E00\u70B9\u7684\u3002\u4E5F\u5C31\u662F\u8BF4\u6211\u4EEC\u901A\u8FC7\u81EA\u5B9A\u4E49<code>Hooks</code>\u662F\u901A\u8FC7\u6765\u7EC4\u5408\u5B98\u65B9<code>Hooks</code>\u4EE5\u53CA\u81EA\u5DF1\u7684\u903B\u8F91\u6765\u5B9E\u73B0\u7684\u5BF9\u4E8E\u8282\u70B9\u5185\u7684\u4E00\u4E9B\u72B6\u6001\u6216\u8005\u5176\u4ED6\u65B9\u9762\u7684\u903B\u8F91\u5C01\u88C5\uFF0C\u800C\u4F7F\u7528\u666E\u901A\u51FD\u6570\u4E14\u91C7\u7528\u7C7B\u4F3C\u4E8E<code>Hooks</code>\u7684\u8BED\u6CD5\u7684\u8BDD\u5219\u53EA\u80FD\u5B9E\u73B0\u5728\u5168\u5C40\u7684\u72B6\u6001\u548C\u903B\u8F91\u7684\u5C01\u88C5\uFF0C\u7B80\u5355\u6765\u8BF4\u5C31\u662F\u63D0\u4F9B\u4E86\u63A5\u53E3\u6765\u8BA9\u6211\u4EEC\u53EF\u4EE5\u5728\u8282\u70B9\u4E0A\u505A\u903B\u8F91\u7684\u5C01\u88C5\u3002<br> \u6709\u4E00\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\uFF0C\u4F8B\u5982\u6211\u4EEC\u8981\u5C01\u88C5\u4E00\u4E2A<code>useUpdateEffect</code>\u6765\u907F\u514D\u5728\u51FD\u6570\u7EC4\u4EF6\u5728\u7B2C\u4E00\u6B21\u6302\u8F7D\u7684\u65F6\u5019\u5C31\u6267\u884C<code>effect</code>\uFF0C\u5728\u8FD9\u91CC\u6211\u4EEC\u5C31\u5E94\u8BE5\u91C7\u7528<code>useRef</code>\u6216\u8005\u662F<code>useState</code>\u800C\u4E0D\u662F\u4EC5\u4EC5\u5B9A\u4E49\u4E00\u4E2A\u53D8\u91CF\u6765\u5B58\u50A8\u72B6\u6001\u503C\uFF0C<code>https://codesandbox.io/s/flamboyant-tu-21po2l?file=/src/App.tsx</code>\u3002</p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#c9d1d9;">// use-update-effect-ref.ts</span></span>
<span class="line"><span style="color:#c9d1d9;">import { DependencyList, EffectCallback, useEffect, useRef } from &quot;react&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">export const useUpdateEffect = (</span></span>
<span class="line"><span style="color:#c9d1d9;">  effect: EffectCallback,</span></span>
<span class="line"><span style="color:#c9d1d9;">  deps?: DependencyList</span></span>
<span class="line"><span style="color:#c9d1d9;">) =&gt; {</span></span>
<span class="line"><span style="color:#c9d1d9;">  const isMounted = useRef(false);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  useEffect(() =&gt; {</span></span>
<span class="line"><span style="color:#c9d1d9;">    if (!isMounted.current) {</span></span>
<span class="line"><span style="color:#c9d1d9;">      isMounted.current = true;</span></span>
<span class="line"><span style="color:#c9d1d9;">    } else {</span></span>
<span class="line"><span style="color:#c9d1d9;">      return effect();</span></span>
<span class="line"><span style="color:#c9d1d9;">    }</span></span>
<span class="line"><span style="color:#c9d1d9;">  }, deps);</span></span>
<span class="line"><span style="color:#c9d1d9;">};</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#c9d1d9;">// use-update-effect-var.ts</span></span>
<span class="line"><span style="color:#c9d1d9;">import { DependencyList, EffectCallback, useEffect } from &quot;react&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">let isMounted = false;</span></span>
<span class="line"><span style="color:#c9d1d9;">export const useUpdateEffect = (</span></span>
<span class="line"><span style="color:#c9d1d9;">  effect: EffectCallback,</span></span>
<span class="line"><span style="color:#c9d1d9;">  deps?: DependencyList</span></span>
<span class="line"><span style="color:#c9d1d9;">) =&gt; {</span></span>
<span class="line"><span style="color:#c9d1d9;">  useEffect(() =&gt; {</span></span>
<span class="line"><span style="color:#c9d1d9;">    if (!isMounted) {</span></span>
<span class="line"><span style="color:#c9d1d9;">      isMounted = true;</span></span>
<span class="line"><span style="color:#c9d1d9;">    } else {</span></span>
<span class="line"><span style="color:#c9d1d9;">      return effect();</span></span>
<span class="line"><span style="color:#c9d1d9;">    }</span></span>
<span class="line"><span style="color:#c9d1d9;">  }, deps);</span></span>
<span class="line"><span style="color:#c9d1d9;">};</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#c9d1d9;">// App.tsx</span></span>
<span class="line"><span style="color:#c9d1d9;">import { useState, useEffect } from &quot;react&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;">import { useUpdateEffect } from &quot;./use-update-effect-ref&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;">// import { useUpdateEffect } from &quot;./use-update-effect-var&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;">import &quot;./styles.css&quot;;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">export default function App() {</span></span>
<span class="line"><span style="color:#c9d1d9;">  const [count1, setCount1] = useState(0);</span></span>
<span class="line"><span style="color:#c9d1d9;">  const [count2, setCount2] = useState(0);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  const addCount1 = () =&gt; setCount1(count1 + 1);</span></span>
<span class="line"><span style="color:#c9d1d9;">  const addCount2 = () =&gt; setCount2(count2 + 1);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  useUpdateEffect(() =&gt; {</span></span>
<span class="line"><span style="color:#c9d1d9;">    console.log(&quot;count1 -&gt; effect&quot;, count1);</span></span>
<span class="line"><span style="color:#c9d1d9;">  }, [count1]);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  useUpdateEffect(() =&gt; {</span></span>
<span class="line"><span style="color:#c9d1d9;">    console.log(&quot;count2 -&gt; effect&quot;, count2);</span></span>
<span class="line"><span style="color:#c9d1d9;">  }, [count2]);</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">  return (</span></span>
<span class="line"><span style="color:#c9d1d9;">    &lt;&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;div&gt;{count1}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;button onClick={addCount1}&gt;Count1++&lt;/button&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;div&gt;{count2}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">      &lt;button onClick={addCount2}&gt;Count2++&lt;/button&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">    &lt;/&gt;</span></span>
<span class="line"><span style="color:#c9d1d9;">  );</span></span>
<span class="line"><span style="color:#c9d1d9;">}</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>\u5F53\u6211\u4EEC\u5207\u6362<code>use-update-effect-ref</code>\u4E0E<code>use-update-effect-var</code>\u7684<code>useUpdateEffect</code>\u65F6\uFF0C\u6211\u4EEC\u4F1A\u53D1\u73B0\u5F53\u5237\u65B0\u9875\u9762\u65F6\u4F7F\u7528<code>use-update-effect-ref</code>\u5C06\u4E0D\u4F1A\u6709\u503C\u6253\u5370\uFF0C\u800C<code>use-update-effect-var</code>\u5219\u4F1A\u6253\u5370<code>count2 -&gt; effect 0</code>\uFF0C\u800C\u5728\u70B9\u51FB<code>Count1++</code>\u6216\u8005<code>Count2++</code>\u7684\u6548\u679C\u90FD\u662F\u6B63\u5E38\u7684\uFF0C\u8BF4\u660E<code>use-update-effect-ref</code>\u662F\u80FD\u591F\u6211\u4EEC\u60F3\u8981\u7684<code>useUpdateEffect</code>\u529F\u80FD\uFF0C\u800C<code>use-update-effect-var</code>\u5374\u56E0\u4E3A\u53D8\u91CF\u503C\u5171\u4EAB\u7684\u95EE\u9898\u800C\u65E0\u6CD5\u6B63\u786E\u5B9E\u73B0\u529F\u80FD\uFF0C\u5F53\u7136\u6211\u4EEC\u4E5F\u53EF\u4EE5\u901A\u8FC7\u7C7B\u4F3C\u4E8E\u6570\u7EC4\u7684\u65B9\u5F0F\u6765\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u4F46\u662F\u518D\u5177\u4F53\u5230\u5404\u4E2A\u7EC4\u4EF6\u4E4B\u95F4\u7684\u5171\u4EAB\u4E0A\u9762\uFF0C\u6211\u4EEC\u5C31\u65E0\u6CD5\u5728\u5728\u7C7B\u4F3C\u4E8E<code>Hooks</code>\u8BED\u6CD5\u7684\u57FA\u7840\u4E0A\u6765\u5B9E\u73B0\u4E86\uFF0C\u5FC5\u987B\u624B\u52A8\u6CE8\u518C\u4E00\u4E2A\u95ED\u5305\u6765\u5B8C\u6210\u7C7B\u4F3C\u7684\u529F\u80FD\uFF0C\u800C\u4E14\u7C7B\u4F3C\u4E8E<code>useState</code>\u5728<code>set</code>\u65F6\u5237\u65B0\u672C\u7EC4\u4EF6\u4EE5\u53CA\u5B50\u7EC4\u4EF6\u7684\u65B9\u5F0F\uFF0C\u5C31\u5FC5\u987B\u501F\u52A9<code>useState</code>\u6765\u5B9E\u73B0\u4E86\u3002</p><h2 id="\u53C2\u8003" tabindex="-1">\u53C2\u8003 <a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a></h2><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#c9d1d9;">https://zhuanlan.zhihu.com/p/265662126</span></span>
<span class="line"><span style="color:#c9d1d9;">https://juejin.cn/post/6927698033798807560</span></span>
<span class="line"><span style="color:#c9d1d9;">https://segmentfault.com/a/1190000037608813</span></span>
<span class="line"><span style="color:#c9d1d9;">https://github.com/brickspert/blog/issues/26</span></span>
<span class="line"><span style="color:#c9d1d9;">https://codesandbox.io/s/flamboyant-tu-21po2l</span></span>
<span class="line"><span style="color:#c9d1d9;">https://codesandbox.io/s/react-usestate-kbd1i</span></span>
<span class="line"><span style="color:#c9d1d9;">https://codesandbox.io/s/react-usestate-8v0li9</span></span>
<span class="line"><span style="color:#c9d1d9;">https://stackoverflow.com/questions/60133412/react-custom-hooks-vs-normal-functions-what-is-the-difference</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,36),c=[p];function o(t,d,r,i,u,b){return a(),n("div",null,c)}const f=s(l,[["render",o]]);export{y as __pageData,f as default};
