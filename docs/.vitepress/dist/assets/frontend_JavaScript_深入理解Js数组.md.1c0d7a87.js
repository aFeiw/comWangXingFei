import{_ as s,c as n,o as a,a as l}from"./app.681f7294.js";const b=JSON.parse('{"title":"\u6DF1\u5165\u7406\u89E3Js\u6570\u7EC4","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u63CF\u8FF0","slug":"\u63CF\u8FF0","link":"#\u63CF\u8FF0","children":[]},{"level":2,"title":"\u6E90\u7801\u5206\u6790","slug":"\u6E90\u7801\u5206\u6790","link":"#\u6E90\u7801\u5206\u6790","children":[{"level":3,"title":"\u5FEB\u6570\u7EC4","slug":"\u5FEB\u6570\u7EC4","link":"#\u5FEB\u6570\u7EC4","children":[]},{"level":3,"title":"\u6162\u6570\u7EC4","slug":"\u6162\u6570\u7EC4","link":"#\u6162\u6570\u7EC4","children":[]},{"level":3,"title":"\u7C7B\u578B\u8F6C\u6362","slug":"\u7C7B\u578B\u8F6C\u6362","link":"#\u7C7B\u578B\u8F6C\u6362","children":[]}]},{"level":2,"title":"\u53C2\u8003","slug":"\u53C2\u8003","link":"#\u53C2\u8003","children":[]}],"relativePath":"frontend/JavaScript/\u6DF1\u5165\u7406\u89E3Js\u6570\u7EC4.md","lastUpdated":1661928310000}'),p={name:"frontend/JavaScript/\u6DF1\u5165\u7406\u89E3Js\u6570\u7EC4.md"},e=l(`<h1 id="\u6DF1\u5165\u7406\u89E3js\u6570\u7EC4" tabindex="-1">\u6DF1\u5165\u7406\u89E3Js\u6570\u7EC4 <a class="header-anchor" href="#\u6DF1\u5165\u7406\u89E3js\u6570\u7EC4" aria-hidden="true">#</a></h1><p>\u5728<code>Js</code>\u4E2D\u6570\u7EC4\u5B58\u5728\u4E24\u79CD\u5F62\u5F0F\uFF0C\u4E00\u79CD\u662F\u4E0E<code>C/C++</code>\u7B49\u76F8\u540C\u7684\u5728\u8FDE\u7EED\u5185\u5B58\u4E2D\u5B58\u653E\u6570\u636E\u7684\u5FEB\u6570\u7EC4\uFF0C\u53E6\u4E00\u79CD\u662F<code>HashTable</code>\u7ED3\u6784\u7684\u6162\u6570\u7EC4\uFF0C\u662F\u4E00\u79CD\u5178\u578B\u7684\u5B57\u5178\u5F62\u5F0F\u3002</p><h2 id="\u63CF\u8FF0" tabindex="-1">\u63CF\u8FF0 <a class="header-anchor" href="#\u63CF\u8FF0" aria-hidden="true">#</a></h2><p>\u5728\u672C\u6587\u4E2D\u6240\u6709\u7684\u6D4B\u8BD5\u90FD\u662F\u57FA\u4E8E<code>V8</code>\u5F15\u64CE\u7684\uFF0C\u4F7F\u7528\u7684\u6D4F\u89C8\u5668\u7248\u672C\u4E3A<code>Chrome 83.0</code>\uFF0C\u5F53\u7136\u76F4\u63A5\u4F7F\u7528<code>Node</code>\u4E5F\u662F\u53EF\u4EE5\u7684\u3002\u901A\u5E38\u521B\u5EFA\u6570\u7EC4\u4E00\u822C\u7528\u4EE5\u4E0B\u4E09\u79CD\u65B9\u5F0F\uFF0C\u5F53\u7136\u5BF9\u4E8E\u76F4\u63A5\u66F4\u6539<code>length</code>\u5C5E\u6027\u7684\u65B9\u5F0F\u4E5F\u53EF\u4EE5\u8FBE\u5230\u6539\u53D8\u6570\u7EC4\u957F\u5EA6\u7684\u76EE\u7684\uFF0C\u4ECE\u800C\u5B9E\u73B0\u521B\u5EFA\u6307\u5B9A\u957F\u5EA6\u7684\u6570\u7EC4\uFF0C\u53EA\u662F\u5E76\u4E0D\u5E38\u7528\u3002</p><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [];</span></span>
<span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Array</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">100</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Array</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">100</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5BF9\u4E8E\u4E0A\u9762\u4E09\u79CD\u65B9\u5F0F\uFF0C\u7B2C\u4E00\u79CD\u4F7F\u7528\u5B57\u9762\u91CF\u521B\u5EFA\u6570\u7EC4\u7684\u65B9\u5F0F\u662F\u6700\u5E38\u7528\u7684\uFF0C\u7B2C\u4E8C\u79CD\u4E0E\u7B2C\u4E09\u79CD\u65B9\u5F0F\u672C\u8D28\u4E0A\u662F\u4E00\u6837\u7684\uFF0C<code>Array</code>\u5185\u90E8\u5B9E\u73B0\u4F1A\u5224\u65AD<code>this</code>\u6307\u9488\u3002\u5728<code>V8</code>\u5F15\u64CE\u4E2D\uFF0C\u76F4\u63A5\u521B\u5EFA\u6570\u7EC4\u9ED8\u8BA4\u7684\u65B9\u5F0F\u662F\u521B\u5EFA\u5FEB\u6570\u7EC4\uFF0C\u4F1A\u76F4\u63A5\u4E3A\u6570\u7EC4\u5F00\u8F9F\u4E00\u5B9A\u5927\u5C0F\u7684\u5185\u5B58\uFF0C\u5173\u4E8E\u8FD9\u4E00\u70B9\u53EF\u4EE5\u76F4\u63A5\u5728<code>Chrome</code>\u7684<code>Memory</code>\u9009\u9879\u5361\u4E0B\u9996\u5148\u4FDD\u5B58\u5FEB\u7167\u7136\u540E\u5728<code>Console</code>\u6267\u884C\u5982\u4E0B\u4EE3\u7801\uFF0C\u53EF\u4EE5\u770B\u5230\u5185\u5B58\u589E\u52A0\u4E86<code>25MB</code>\u5DE6\u53F3\uFF0C\u8BF4\u660E\u5176\u5F00\u8F9F\u4E86\u4E00\u5757\u5185\u5B58\u533A\u57DF\u4F9B\u6570\u7EC4\u4F7F\u7528\uFF0C\u5047\u5982\u4F7F\u7528<code>Node</code>\u7684\u8BDD\u53EF\u4EE5\u6267\u884C<code>process.memoryUsage();</code>\u6765\u67E5\u770B\u5185\u5B58\u5360\u7528\u3002</p><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">LIMIT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">6</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1024</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1024</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Array</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">LIMIT</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5BF9\u4E8E\u5FEB\u6570\u7EC4\uFF0C\u5176\u5F00\u8F9F\u4E86\u4E00\u5757\u8FDE\u7EED\u7684\u5185\u5B58\u533A\u57DF\u7528\u6765\u63D0\u4F9B\u6570\u636E\u5B58\u50A8\uFF0C\u5728\u904D\u5386\u7684\u6548\u7387\u4E0A\u4F1A\u9AD8\u5F97\u591A\u3002\u5BF9\u4E8E\u6162\u6570\u7EC4\uFF0C\u662F<code>HashTable</code>\u7ED3\u6784\uFF0C\u53EF\u4EE5\u8BA4\u4E3A\u5176\u5C31\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u53EA\u4E0D\u8FC7\u7D22\u5F15\u7684\u503C\u53EA\u80FD\u4E3A\u6570\u5B57\uFF0C\u5728\u5B9E\u9645\u4F7F\u7528\u4E2D\u8FD9\u4E2A\u6570\u5B57\u7D22\u5F15\u4F1A\u88AB\u5F3A\u5236\u8F6C\u4E3A\u5B57\u7B26\u4E32\uFF0C\u5728\u904D\u5386\u7684\u6548\u7387\u4E0A\u4F1A\u6162\u7684\u591A\uFF0C\u4F46\u662F\u5BF9\u4E8E\u4E00\u4E2A\u6570\u7EC4\u662F\u6162\u6570\u7EC4\u4E14\u4E3A\u7A00\u758F\u6570\u7EC4\u7684\u60C5\u51B5\u4E0B\uFF0C\u53EF\u4EE5\u8282\u7701\u5927\u91CF\u5185\u5B58\u533A\u57DF\u3002<br> \u5BF9\u4E8E\u5FEB\u6570\u7EC4\uFF0C\u76F4\u63A5\u8D4B\u503C\uFF0C\u53EF\u4EE5\u770B\u5230\u5B8C\u6210\u64CD\u4F5C\u9700\u8981<code>27ms</code>\u3002</p><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">LIMIT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">6</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1024</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1024</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Array</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">LIMIT</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">time</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Array&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> i</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">; i</span><span style="color:#FF7B72;">&lt;</span><span style="color:#79C0FF;">LIMIT</span><span style="color:#C9D1D9;">; i</span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">) arr[i]</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">i;</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">timeEnd</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Array&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#8B949E;">// Array: 27.64697265625ms</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5BF9\u4E8E\u6162\u6570\u7EC4\uFF0C\u672C\u4F8B\u9996\u5148<code>push</code>\u4E00\u4E2A\u503C\u7528\u6765\u8FDB\u884C\u6269\u5BB9\u64CD\u4F5C\uFF0C\u5F15\u64CE\u4F1A\u81EA\u52A8\u5C06\u8BE5\u6570\u7EC4\u8F6C\u6362\u4E3A\u6162\u6570\u7EC4\uFF0C\u5173\u4E8E\u4E3A\u4EC0\u4E48\u672C\u6B21\u6269\u5BB9\u64CD\u4F5C\u4F1A\u5F15\u8D77\u5FEB\u6162\u6570\u7EC4\u7684\u8F6C\u6362\u4F1A\u5728\u4E0B\u8FB9\u8BB2\u5230\uFF0C\u5176\u4ED6\u64CD\u4F5C\u4E0E\u5FEB\u6570\u7EC4\u7C7B\u4F3C\uFF0C\u53EF\u4EE5\u770B\u5230\u5B8C\u6210\u64CD\u4F5C\u9700\u8981<code>627ms</code>\u3002</p><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">LIMIT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">6</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1024</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1024</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Array</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">LIMIT</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">arr.</span><span style="color:#D2A8FF;">push</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">); </span><span style="color:#8B949E;">// \u4E3A\u4E86\u5C06\u5FEB\u6570\u7EC4\u8F6C\u6362\u4E3A\u6162\u6570\u7EC4</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">time</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Array&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> i</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">; i</span><span style="color:#FF7B72;">&lt;</span><span style="color:#79C0FF;">LIMIT</span><span style="color:#C9D1D9;">; i</span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">) arr[i]</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">i;</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">timeEnd</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Array&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#8B949E;">// Array: 627.759033203125ms</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5982\u679C\u5728\u5FEB\u6570\u7EC4\u4E2D\u5E76\u4E0D\u8FDE\u7EED\u63D2\u5165\u6570\u636E\uFF0C\u800C\u662F\u4F5C\u4E3A\u7A00\u758F\u6570\u7EC4\u53BB\u4F7F\u7528\uFF0C\u5728\u7A00\u758F\u7684\u7A0B\u5EA6\u4E0D\u9AD8\u7684\u65F6\u5019\u4F9D\u65E7\u662F\u5FEB\u6570\u7EC4\u7684\u5F62\u5F0F\uFF0C\u5E76\u4E0D\u4F1A\u89E6\u53D1\u8F6C\u6362\u4E3A\u6162\u6570\u7EC4\u7684\u64CD\u4F5C\u3002</p><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">LIMIT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">6</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1024</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1024</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Array</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">LIMIT</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">time</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Array&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> i</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">; i</span><span style="color:#FF7B72;">&lt;</span><span style="color:#79C0FF;">LIMIT</span><span style="color:#C9D1D9;">; i </span><span style="color:#FF7B72;">+=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">) arr[i]</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">i; </span><span style="color:#8B949E;">// \u5FAA\u73AF\u7684i\u4E3A i += 2</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">timeEnd</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Array&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#8B949E;">// Array: 15.27001953125ms</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5728\u6570\u7EC4\u4E2D\u63D2\u5165\u4E0D\u540C\u7C7B\u578B\u7684\u6570\u636E\u5E76\u4E0D\u4E00\u5B9A\u4F1A\u5F15\u8D77\u5FEB\u6162\u6570\u7EC4\u7684\u8F6C\u6362\uFF0C\u4F8B\u5982\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\u63D2\u5165\u4E86\u5B57\u7B26\u4E32\u3001\u6570\u503C\u3001\u5E03\u5C14\u7C7B\u578B\u7684\u503C\u4EE5\u53CA\u5BF9\u8C61\u7684\u5F15\u7528\uFF0C\u5728\u63D2\u5165\u6548\u7387\u4E0A\u5E76\u4E0D\u4F4E\u3002</p><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">LIMIT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">6</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1024</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1024</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Array</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">LIMIT</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> obj </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {};</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">time</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Array&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> i</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">; i</span><span style="color:#FF7B72;">&lt;</span><span style="color:#79C0FF;">LIMIT</span><span style="color:#C9D1D9;">; i</span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;">(i </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">100</span><span style="color:#C9D1D9;">) arr[i] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> i;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">else</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;">(i </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1000</span><span style="color:#C9D1D9;">) arr[i] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;T&quot;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">else</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;">(i </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">10000</span><span style="color:#C9D1D9;">) arr[i] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">else</span><span style="color:#C9D1D9;"> arr[i] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> obj;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">timeEnd</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Array&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#8B949E;">// Array: 32.123046875ms</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u5173\u4E8E\u7A00\u758F\u6570\u7EC4\u4E2D\u7684<code>empty</code>\uFF0C\u662F\u4E00\u4E2A\u7A7A\u7684\u5BF9\u8C61\u5F15\u7528\uFF0C\u5728<code>ES6</code>\u7684\u6587\u6863\u4E2D\u89C4\u5B9A\u4E86<code>empty</code>\u5C31\u662F\u7B49\u4E8E<code>undefined</code>\u7684\uFF0C\u5728\u4EFB\u4F55\u60C5\u51B5\u4E0B\u90FD\u5E94\u8BE5\u8FD9\u6837\u5BF9\u5F85<code>empty</code>\uFF0C\u5728<code>indexOf</code>\u3001<code>filter</code>\u3001<code>forEach</code>\u4E2D\u4F1A\u81EA\u52A8\u5FFD\u7565\u6389<code>empty</code>\uFF0C\u5728<code>includes</code>\u4E2D\u4F1A\u8BA4\u4E3A\u5176\u7B49\u4E8E<code>undefined</code>\uFF0C<code>map</code>\u4E2D\u5219\u4F1A\u4FDD\u7559<code>empty</code>\u3002</p><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Array</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">arr[</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(arr); </span><span style="color:#8B949E;">// (3) [1, empty \xD7 2]</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(arr[</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">===</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">undefined</span><span style="color:#C9D1D9;">); </span><span style="color:#8B949E;">// true</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(arr.</span><span style="color:#D2A8FF;">indexOf</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">undefined</span><span style="color:#C9D1D9;">)); </span><span style="color:#8B949E;">// -1</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(arr.</span><span style="color:#D2A8FF;">filter</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">v</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> v)); </span><span style="color:#8B949E;">// [1]</span></span>
<span class="line"><span style="color:#C9D1D9;">arr.</span><span style="color:#D2A8FF;">forEach</span><span style="color:#C9D1D9;">( </span><span style="color:#FFA657;">v</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(v)); </span><span style="color:#8B949E;">// 1</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(arr.</span><span style="color:#D2A8FF;">includes</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">undefined</span><span style="color:#C9D1D9;">)); </span><span style="color:#8B949E;">// true</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(arr.</span><span style="color:#D2A8FF;">map</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">v</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> v)); </span><span style="color:#8B949E;">// [1, empty \xD7 2]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u5982\u679C\u5FC5\u987B\u8981\u5F00\u8F9F\u4E00\u4E2A\u5BC6\u96C6\u6570\u7EC4\uFF0C\u4E5F\u5C31\u662F\u4E0D\u5B58\u5728<code>empty</code>\u7684\u60C5\u51B5\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4E0B\u9762\u7684\u65B9\u5F0F\u53BB\u5F00\u8F9F\u3002</p><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#C9D1D9;">[</span><span style="color:#FF7B72;">...new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Array</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">)]; </span><span style="color:#8B949E;">// (3) [undefined, undefined, undefined]</span></span>
<span class="line"><span style="color:#C9D1D9;">Array.</span><span style="color:#D2A8FF;">apply</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Array</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">)); </span><span style="color:#8B949E;">// (3) [undefined, undefined, undefined]</span></span>
<span class="line"><span style="color:#C9D1D9;">Array.</span><span style="color:#D2A8FF;">from</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Array</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">)); </span><span style="color:#8B949E;">// (3) [undefined, undefined, undefined]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5728<code>Js</code>\u4E2D\u8FD8\u5B58\u5728\u7C7B\u578B\u5316\u6570\u7EC4\uFF0C<code>ArrayBuffer</code>\u662F\u4E00\u79CD\u6570\u636E\u7C7B\u578B\uFF0C\u7528\u6765\u8868\u793A\u4E00\u4E2A\u901A\u7528\u7684\u3001\u56FA\u5B9A\u957F\u5EA6\u7684\u4E8C\u8FDB\u5236\u6570\u636E\u7F13\u51B2\u533A\uFF0C\u4E0D\u80FD\u76F4\u63A5\u64CD\u7EB5\u4E00\u4E2A<code>ArrayBuffer</code>\u4E2D\u7684\u5185\u5BB9\uFF0C\u9700\u8981\u521B\u5EFA\u4E00\u4E2A\u7C7B\u578B\u5316\u6570\u7EC4\u7684\u89C6\u56FE\u6216\u4E00\u4E2A\u63CF\u8FF0\u7F13\u51B2\u6570\u636E\u683C\u5F0F\u7684<code>DataView</code>\uFF0C\u4F7F\u7528\u5B83\u4EEC\u6765\u8BFB\u5199\u7F13\u51B2\u533A\u4E2D\u7684\u5185\u5BB9\u3002\u7B80\u5355\u6765\u8BF4\u5C31\u662F\u4E00\u5757\u5927\u7684\u8FDE\u7EED\u7684\u5185\u5B58\u533A\u57DF\uFF0C\u53EF\u4EE5\u7528\u5B83\u6765\u505A\u4E00\u4E9B\u9AD8\u6548\u7684\u5B58\u53D6\u64CD\u4F5C\u7B49\u3002</p><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">LIMIT</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">6</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1024</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1024</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> buffer </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">ArrayBuffer</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">LIMIT</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> arr </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Int32Array</span><span style="color:#C9D1D9;">(buffer);</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">time</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Array&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">var</span><span style="color:#C9D1D9;"> i</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">; i</span><span style="color:#FF7B72;">&lt;</span><span style="color:#79C0FF;">LIMIT</span><span style="color:#C9D1D9;">; i</span><span style="color:#FF7B72;">++</span><span style="color:#C9D1D9;">) arr[i]</span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">i;</span></span>
<span class="line"><span style="color:#C9D1D9;">console.</span><span style="color:#D2A8FF;">timeEnd</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Array&quot;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#8B949E;">// Array: 30.139892578125ms</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5BF9\u4E8E\u5FEB\u6162\u6570\u7EC4\uFF0C\u4E24\u8005\u7684\u4E5F\u6709\u5404\u81EA\u7684\u7279\u70B9\uFF0C\u5728\u5B9E\u9645\u4F7F\u7528\u7684\u8FC7\u7A0B\u4E2D\u662F\u5B58\u5728\u76F8\u4E92\u8F6C\u6362\u7684\uFF0C\u5728\u5B58\u50A8\u65B9\u5F0F\u3001\u5185\u5B58\u4F7F\u7528\u3001\u904D\u5386\u6548\u7387\u65B9\u9762\u6709\u5982\u4E0B\u603B\u7ED3\uFF1A</p><ul><li>\u5B58\u50A8\u65B9\u5F0F\u65B9\u9762\uFF1A\u5FEB\u6570\u7EC4\u5185\u5B58\u4E2D\u662F\u8FDE\u7EED\u7684\uFF0C\u6162\u6570\u7EC4\u5728\u5185\u5B58\u4E2D\u662F\u96F6\u6563\u5206\u914D\u7684\u3002</li><li>\u5185\u5B58\u4F7F\u7528\u65B9\u9762\uFF1A\u7531\u4E8E\u5FEB\u6570\u7EC4\u5185\u5B58\u662F\u8FDE\u7EED\u7684\uFF0C\u53EF\u80FD\u9700\u8981\u5F00\u8F9F\u4E00\u5927\u5757\u4F9B\u5176\u4F7F\u7528\uFF0C\u5176\u4E2D\u8FD8\u53EF\u80FD\u6709\u5F88\u591A\u7A7A\u6D1E\uFF0C\u662F\u6BD4\u8F83\u8D39\u5185\u5B58\u7684\u3002\u6162\u6570\u7EC4\u4E0D\u4F1A\u6709\u7A7A\u6D1E\u7684\u60C5\u51B5\uFF0C\u4E14\u90FD\u662F\u96F6\u6563\u7684\u5185\u5B58\uFF0C\u6BD4\u8F83\u8282\u7701\u5185\u5B58\u7A7A\u95F4\u3002</li><li>\u904D\u5386\u6548\u7387\u65B9\u9762\uFF1A\u5FEB\u6570\u7EC4\u7531\u4E8E\u662F\u7A7A\u95F4\u8FDE\u7EED\u7684\uFF0C\u904D\u5386\u901F\u5EA6\u5F88\u5FEB\uFF0C\u800C\u6162\u6570\u7EC4\u6BCF\u6B21\u90FD\u8981\u5BFB\u627E<code>key</code> \u7684\u4F4D\u7F6E\uFF0C\u904D\u5386\u6548\u7387\u4F1A\u5DEE\u4E00\u4E9B\u3002</li></ul><h2 id="\u6E90\u7801\u5206\u6790" tabindex="-1">\u6E90\u7801\u5206\u6790 <a class="header-anchor" href="#\u6E90\u7801\u5206\u6790" aria-hidden="true">#</a></h2><p>\u7B80\u5355\u5206\u6790<code>V8</code>\u5F15\u64CE\u7684\u6570\u7EC4\u65B9\u9762\u7684\u5185\u5BB9\uFF0C<code>COMMIT ID</code>\u4E3A<code>db4822d</code>\u3002\u901A\u8FC7\u5728<code>V8</code>\u6570\u7EC4\u7684\u5B9A\u4E49\u53EF\u4EE5\u4E86\u89E3\u5230\uFF0C\u6570\u7EC4\u53EF\u4EE5\u5904\u4E8E\u4E24\u79CD\u6A21\u5F0F\uFF0C<code>Fast</code>\u6A21\u5F0F\u7684\u5B58\u50A8\u7ED3\u6784\u662F<code>FixedArray</code>\u5E76\u4E14\u957F\u5EA6\u5C0F\u4E8E\u7B49\u4E8E<code>elements.length</code>\uFF0C\u53EF\u4EE5\u901A\u8FC7<code>push</code>\u548C<code>pop</code>\u589E\u52A0\u548C\u7F29\u5C0F\u6570\u7EC4\u3002<code>slow</code>\u6A21\u5F0F\u7684\u5B58\u50A8\u7ED3\u6784\u662F\u4E00\u4E2A\u4EE5\u6570\u5B57\u4E3A\u952E\u7684<code>HashTable</code>\u3002</p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#8B949E;">// v8/src/objects/js-array.h // line 19</span></span>
<span class="line"><span style="color:#8B949E;">// The JSArray describes JavaScript Arrays</span></span>
<span class="line"><span style="color:#8B949E;">//  Such an array can be in one of two modes:</span></span>
<span class="line"><span style="color:#8B949E;">//    - fast, backing storage is a FixedArray and length &lt;= elements.length();</span></span>
<span class="line"><span style="color:#8B949E;">//       Please note: push and pop can be used to grow and shrink the array.</span></span>
<span class="line"><span style="color:#8B949E;">//    - slow, backing storage is a HashTable with numbers as keys.</span></span>
<span class="line"><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">JSArray</span><span style="color:#C9D1D9;"> : </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">JSObject</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">public:</span></span>
<span class="line"><span style="color:#8B949E;">  // [length]: The length property.</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#D2A8FF;">DECL_ACCESSORS</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">length</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">Object</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;"> </span></span>
<span class="line"><span style="color:#8B949E;"> //...</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="\u5FEB\u6570\u7EC4" tabindex="-1">\u5FEB\u6570\u7EC4 <a class="header-anchor" href="#\u5FEB\u6570\u7EC4" aria-hidden="true">#</a></h3><p>\u5FEB\u6570\u7EC4\u662F\u4E00\u79CD\u7EBF\u6027\u7684\u5B58\u50A8\u65B9\u5F0F\uFF0C\u5185\u90E8\u5B58\u50A8\u662F\u8FDE\u7EED\u7684\u5185\u5B58\uFF0C\u65B0\u521B\u5EFA\u7684\u7A7A\u6570\u7EC4\uFF0C\u9ED8\u8BA4\u7684\u5B58\u50A8\u65B9\u5F0F\u662F\u5FEB\u6570\u7EC4\uFF0C\u5FEB\u6570\u7EC4\u957F\u5EA6\u662F\u53EF\u53D8\u7684\uFF0C\u53EF\u4EE5\u6839\u636E\u5143\u7D20\u7684\u589E\u52A0\u548C\u5220\u9664\u6765\u52A8\u6001\u8C03\u6574\u5B58\u50A8\u7A7A\u95F4\u5927\u5C0F\uFF0C\u5185\u90E8\u662F\u901A\u8FC7\u6269\u5BB9\u548C\u6536\u7F29\u673A\u5236\u5B9E\u73B0\u3002\u9996\u5148\u6765\u5206\u6790\u4EE5\u4E0B\u6269\u5BB9\u673A\u5236\uFF0C\u9ED8\u8BA4\u7684\u7A7A\u6570\u7EC4\u9884\u5206\u914D\u7684\u5927\u5C0F\u4E3A<code>4</code>\uFF0C\u5F53\u6570\u7EC4\u8FDB\u884C\u6269\u5145\u64CD\u4F5C\u4F8B\u5982<code>push</code>\u65F6\uFF0C\u6570\u7EC4\u7684\u5185\u5B58\u82E5\u4E0D\u591F\u5219\u5C06\u8FDB\u884C\u6269\u5BB9\uFF0C\u6700\u5C0F\u7684\u6269\u5BB9\u5BB9\u91CF\u4E3A<code>16</code>\uFF0C\u6269\u5BB9\u7684\u516C\u5F0F\u4E3A<code>new_capacity = old_capacity + old_capacity /2 + 16</code>\uFF0C\u5373\u7533\u8BF7\u4E00\u5757\u539F\u5BB9\u91CF<code>1.5</code>\u500D\u52A0<code>16</code>\u8FD9\u6837\u5927\u5C0F\u7684\u5185\u5B58\uFF0C\u5C06\u539F\u6570\u636E\u62F7\u8D1D\u5230\u65B0\u5185\u5B58\uFF0C\u7136\u540E<code>length + 1</code>\uFF0C\u5E76\u8FD4\u56DE<code>length</code>\u3002</p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#8B949E;">// v8/src/objects/js-array.h // line 105</span></span>
<span class="line"><span style="color:#8B949E;">// Number of element slots to pre-allocate for an empty array.</span></span>
<span class="line"><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">int</span><span style="color:#C9D1D9;"> kPreallocatedArrayElements </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">4</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">// v8/src/objects/js-objects.h // line 537</span></span>
<span class="line"><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">uint32_t</span><span style="color:#C9D1D9;"> kMinAddedElementsCapacity </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">16</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">// v8/src/objects/js-objects.h // line 540 // \u8BA1\u7B97\u6269\u5BB9\u540E\u7684\u5BB9\u91CF</span></span>
<span class="line"><span style="color:#8B949E;">// Computes the new capacity when expanding the elements of a JSObject.</span></span>
<span class="line"><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">uint32_t</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">NewElementsCapacity</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">uint32_t</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">old_capacity</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#8B949E;">    // (old_capacity + 50%) + kMinAddedElementsCapacity</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> old_capacity </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> (old_capacity </span><span style="color:#FF7B72;">&gt;&gt;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> kMinAddedElementsCapacity;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">// v8/src/code-stub-assembler.cc // line 5137 // \u6269\u5BB9\u7684\u5B9E\u73B0</span></span>
<span class="line"><span style="color:#FFA657;">Node</span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">CodeStubAssembler</span><span style="color:#C9D1D9;">::</span><span style="color:#D2A8FF;">CalculateNewElementsCapacity</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">Node</span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">old_capacity</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">                                                      </span><span style="color:#FFA657;">ParameterMode</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">mode</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#D2A8FF;">CSA_SLOW_ASSERT</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">, </span><span style="color:#D2A8FF;">MatchesParameterMode</span><span style="color:#C9D1D9;">(old_capacity, mode));</span></span>
<span class="line"><span style="color:#C9D1D9;">  Node</span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> half_old_capacity </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">WordOrSmiShr</span><span style="color:#C9D1D9;">(old_capacity, </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, mode);</span></span>
<span class="line"><span style="color:#C9D1D9;">  Node</span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> new_capacity </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">IntPtrOrSmiAdd</span><span style="color:#C9D1D9;">(half_old_capacity, old_capacity, mode);</span></span>
<span class="line"><span style="color:#C9D1D9;">  Node</span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> padding </span><span style="color:#FF7B72;">=</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#D2A8FF;">IntPtrOrSmiConstant</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">JSObject</span><span style="color:#C9D1D9;">::kMinAddedElementsCapacity, mode);</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">IntPtrOrSmiAdd</span><span style="color:#C9D1D9;">(new_capacity, padding, mode);</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">// v8/src/code-stub-assembler.cc // line 5202 // \u5185\u5B58\u7684\u62F7\u8D1D</span></span>
<span class="line"><span style="color:#8B949E;">// Allocate the new backing store.</span></span>
<span class="line"><span style="color:#C9D1D9;">Node</span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> new_elements </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">AllocateFixedArray</span><span style="color:#C9D1D9;">(to_kind, new_capacity, mode);</span></span>
<span class="line"><span style="color:#8B949E;">// Copy the elements from the old elements store to the new.</span></span>
<span class="line"><span style="color:#8B949E;">// The size-check above guarantees that the |new_elements| is allocated</span></span>
<span class="line"><span style="color:#8B949E;">// in new space so we can skip the write barrier.</span></span>
<span class="line"><span style="color:#D2A8FF;">CopyFixedArrayElements</span><span style="color:#C9D1D9;">(from_kind, elements, to_kind, new_elements, capacity,</span></span>
<span class="line"><span style="color:#C9D1D9;">                     new_capacity, SKIP_WRITE_BARRIER, mode);</span></span>
<span class="line"><span style="color:#D2A8FF;">StoreObjectField</span><span style="color:#C9D1D9;">(object, </span><span style="color:#FFA657;">JSObject</span><span style="color:#C9D1D9;">::kElementsOffset, new_elements);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>\u5F53\u6570\u7EC4\u6267\u884C<code>pop</code>\u64CD\u4F5C\u65F6\uFF0C\u4F1A\u5224\u65AD<code>pop</code>\u540E\u6570\u7EC4\u7684\u5BB9\u91CF\uFF0C\u662F\u5426\u9700\u8981\u8FDB\u884C\u51CF\u5BB9\uFF0C\u5982\u679C\u5BB9\u91CF\u5927\u4E8E\u7B49\u4E8E<code>length * 2 + 16</code>\uFF0C\u5219\u8FDB\u884C\u6536\u7F29\u5BB9\u91CF\u8C03\u6574\uFF0C\u5426\u5219\u7528<code>HOLES</code>\u5BF9\u8C61\u586B\u5145\u672A\u88AB\u521D\u59CB\u5316\u7684\u4F4D\u7F6E\uFF0C<code>elements_to_trim</code>\u5C31\u662F\u8981\u88C1\u526A\u7684\u5927\u5C0F\uFF0C\u9700\u8981\u6839\u636E<code>length + 1</code>\u548C<code>old_length</code>\u5224\u65AD\u662F\u5C06\u7A7A\u51FA\u7684\u7A7A\u95F4\u5168\u90E8\u6536\u7F29\u6389\u8FD8\u662F\u53EA\u6536\u7F29\u4E00\u534A\u3002</p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#8B949E;">// v8/src/elements.cc // line 783</span></span>
<span class="line"><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (</span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> length </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">JSObject</span><span style="color:#C9D1D9;">::kMinAddedElementsCapacity </span><span style="color:#FF7B72;">&lt;=</span><span style="color:#C9D1D9;"> capacity) {</span></span>
<span class="line"><span style="color:#8B949E;">    // If more than half the elements won&#39;t be used, trim the array.</span></span>
<span class="line"><span style="color:#8B949E;">    // Do not trim from short arrays to prevent frequent trimming on</span></span>
<span class="line"><span style="color:#8B949E;">    // repeated pop operations.</span></span>
<span class="line"><span style="color:#8B949E;">    // Leave some space to allow for subsequent push operations.</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">int</span><span style="color:#C9D1D9;"> elements_to_trim </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> length </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">==</span><span style="color:#C9D1D9;"> old_length</span></span>
<span class="line"><span style="color:#C9D1D9;">                                </span><span style="color:#FF7B72;">?</span><span style="color:#C9D1D9;"> (capacity </span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;"> length) </span><span style="color:#FF7B72;">/</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">2</span></span>
<span class="line"><span style="color:#C9D1D9;">                                </span><span style="color:#FF7B72;">:</span><span style="color:#C9D1D9;"> capacity </span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;"> length;</span></span>
<span class="line"><span style="color:#C9D1D9;">    isolate-&gt;</span><span style="color:#D2A8FF;">heap</span><span style="color:#C9D1D9;">()-&gt;</span><span style="color:#D2A8FF;">RightTrimFixedArray</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">backing_store, elements_to_trim);</span></span>
<span class="line"><span style="color:#8B949E;">    // Fill the non-trimmed elements with holes.</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FFA657;">BackingStore</span><span style="color:#C9D1D9;">::</span><span style="color:#D2A8FF;">cast</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">backing_store)</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">-&gt;</span><span style="color:#D2A8FF;">FillWithHoles</span><span style="color:#C9D1D9;">(length,</span></span>
<span class="line"><span style="color:#C9D1D9;">                        </span><span style="color:#FFA657;">std</span><span style="color:#C9D1D9;">::</span><span style="color:#D2A8FF;">min</span><span style="color:#C9D1D9;">(old_length, capacity </span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;"> elements_to_trim));</span></span>
<span class="line"><span style="color:#C9D1D9;">} </span><span style="color:#FF7B72;">else</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#8B949E;">    // Otherwise, fill the unused tail with holes.</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FFA657;">BackingStore</span><span style="color:#C9D1D9;">::</span><span style="color:#D2A8FF;">cast</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">backing_store)-&gt;</span><span style="color:#D2A8FF;">FillWithHoles</span><span style="color:#C9D1D9;">(length, old_length);</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u4E0A\u8FB9\u63D0\u5230\u7684<code>HOLES</code>\u5BF9\u8C61\u6307\u7684\u662F\u6570\u7EC4\u4E2D\u5206\u914D\u4E86\u7A7A\u95F4\uFF0C\u4F46\u662F\u6CA1\u6709\u5B58\u653E\u5143\u7D20\u7684\u4F4D\u7F6E\uFF0C\u5BF9\u4E8E<code>HOLES</code>\uFF0C\u5728<code>Fast Elements</code>\u6A21\u5F0F\u4E2D\u6709\u4E00\u4E2A\u6269\u5C55\uFF0C\u79F0\u4E3A<code>Fast Holey Elements</code>\u6A21\u5F0F\u3002<code>Fast Holey Elements</code>\u6A21\u5F0F\u9002\u5408\u4E8E\u6570\u7EC4\u4E2D\u7684\u6709\u7A7A\u6D1E\u60C5\u51B5\uFF0C\u5373\u53EA\u6709\u67D0\u4E9B\u7D22\u5F15\u5B58\u6709\u6570\u636E\uFF0C\u800C\u5176\u4ED6\u7684\u7D22\u5F15\u90FD\u6CA1\u6709\u8D4B\u503C\u7684\u60C5\u51B5\uFF0C\u6B64\u65F6\u6CA1\u6709\u8D4B\u503C\u7684\u6570\u7EC4\u7D22\u5F15\u5C06\u4F1A\u5B58\u50A8\u4E00\u4E2A\u7279\u6B8A\u7684\u503C<code>empty</code>\uFF0C\u8FD9\u6837\u5728\u8BBF\u95EE\u8FD9\u4E9B\u4F4D\u7F6E\u65F6\u5C31\u53EF\u4EE5\u5F97\u5230<code>undefined</code>\u3002<code>Fast Holey Elements</code>\u6A21\u5F0F\u4E0E<code>Fast Elements</code>\u6A21\u5F0F\u4E00\u6837\uFF0C\u4F1A\u52A8\u6001\u5206\u914D\u8FDE\u7EED\u7684\u5B58\u50A8\u7A7A\u95F4\uFF0C\u5206\u914D\u7A7A\u95F4\u7684\u5927\u5C0F\u7531\u6700\u5927\u7684\u7D22\u5F15\u503C\u51B3\u5B9A\u3002\u5B9A\u4E49\u6570\u7EC4\u65F6\uFF0C\u5982\u679C\u6CA1\u6709\u8BBE\u7F6E\u5BB9\u91CF\uFF0C<code>V8</code>\u4F1A\u9ED8\u8BA4\u4F7F\u7528<code>Fast Elements</code>\u6A21\u5F0F\u5B9E\u73B0\uFF0C\u5982\u679C\u5B9A\u4E49\u6570\u7EC4\u65F6\u8FDB\u884C\u4E86\u5BB9\u91CF\u7684\u6307\u5B9A\uFF0C\u5982\u4E0A\u6587\u4E2D\u7684<code>new Array(100)</code>\uFF0C\u5C31\u4F1A\u4EE5<code>Fast Holey Elements</code>\u6A21\u5F0F\u5B9E\u73B0\u3002<br> \u5728<code>Fast Elements</code>\u6A21\u5F0F\u4E0B<code>V8</code>\u5F15\u64CE\u8FD8\u6839\u636E\u5143\u7D20\u7C7B\u578B\u5BF9\u6570\u7EC4\u7C7B\u578B\u505A\u4E86\u7EC6\u5206\u7528\u4EE5\u4F18\u5316\u6570\u7EC4\uFF0C\u5F53\u5168\u90E8\u5143\u7D20\u90FD\u4E3A\u6574\u6570\u578B\u7684\u8BDD\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u6570\u7EC4\u7684\u7C7B\u578B\u5C31\u88AB\u6807\u8BB0\u4E3A<code>PACKED_SMI_ELEMENTS</code>\u3002\u5982\u679C\u53EA\u5B58\u5728\u6574\u6570\u578B\u548C\u6D6E\u70B9\u578B\u7684\u5143\u7D20\u7C7B\u578B\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u6570\u7EC4\u7684\u7C7B\u578B\u4E3A<code>PACKED_DOUBLE_ELEMENTS</code>\u3002\u9664\u6B64\u4EE5\u5916\uFF0C\u4E00\u4E2A\u6570\u7EC4\u5305\u542B\u5176\u5B83\u7684\u5143\u7D20\uFF0C\u90FD\u88AB\u6807\u8BB0\u4E3A<code>PACKED_ELEMENTS</code>\u3002\u800C\u8FD9\u4E9B\u6570\u7EC4\u7C7B\u578B\u5E76\u975E\u4E00\u6210\u4E0D\u53D8\uFF0C\u800C\u662F\u5728\u8FD0\u884C\u65F6\u968F\u65F6\u66F4\u6539\u7684\uFF0C\u4F46\u662F\u6570\u7EC4\u7684\u7C7B\u578B\u53EA\u80FD\u4ECE\u7279\u5B9A\u79CD\u7C7B\u53D8\u66F4\u4E3A\u666E\u901A\u79CD\u7C7B\u3002\u5373\u521D\u59CB\u4E3A<code>PACKED_SMI_ELEMENTS</code>\u7684\u6570\u7EC4\uFF0C\u53EA\u80FD\u8FC7\u6E21\u4E3A<code>PACKED_DOUBLE_ELEMENTS</code>\u6216\u8005<code>PACKED_ELEMENTS</code>\u3002\u800C<code>PACKED_DOUBLE_ELEMENTS</code>\u53EA\u80FD\u8FC7\u6E21\u4E3A<code>PACKED_ELEMENTS</code>\u3002\u81F3\u4E8E\u521D\u59CB\u5C31\u662F<code>PACKED_ELEMENTS</code>\u7C7B\u578B\u7684\u6570\u7EC4\uFF0C\u5C31\u65E0\u6CD5\u518D\u8FC7\u6E21\u4E86\uFF0C\u65E0\u6CD5\u9006\u5411\u8FC7\u6E21\u3002\u800C\u4E0A\u8FF0\u7684\u8FD9\u4E09\u79CD\u7C7B\u578B\uFF0C\u90FD\u5C5E\u4E8E\u5BC6\u96C6\u6570\u7EC4\uFF0C\u4E0E\u4E4B\u76F8\u5BF9\u5E94\u7684\uFF0C\u662F\u7A00\u758F\u6570\u7EC4\uFF0C\u6807\u8BB0\u4E3A<code>HOLEY_ELEMENTS</code>\uFF0C\u7A00\u758F\u6570\u7EC4\u540C\u6837\u5177\u6709\u4E09\u79CD\u7C7B\u578B\uFF0C\u4EFB\u4F55\u4E00\u79CD<code>PACKED</code>\u90FD\u53EF\u4EE5\u8FC7\u6E21\u5230<code>HOLEY</code>\u3002<code>PACKED_SMI_ELEMENTS</code>\u53EF\u4EE5\u8F6C\u6362\u4E3A<code>HOLEY_SMI_ELEMENTS</code>\uFF0C<code>PACKED_DOUBLE_ELEMENTS</code>\u53EF\u4EE5\u8F6C\u6362\u4E3A<code>HOLEY_DOUBLE_ELEMENTS</code>\uFF0C<code>PACKED_ELEMENTS</code>\u53EF\u4EE5\u8F6C\u6362\u4E3A<code>HOLEY_ELEMENTS</code>\u3002\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u867D\u7136\u53EF\u4EE5\u5C06\u6570\u7EC4\u8F6C\u6362\u4E3A<code>HOLEY</code>\u6A21\u5F0F\uFF0C\u4F46\u662F\u5E76\u4E0D\u4E00\u5B9A\u5C31\u4EE3\u8868\u7740\u8FD9\u4E2A\u6570\u7EC4\u88AB\u8F6C\u6362\u4E3A\u6162\u6570\u7EC4\u3002</p><h3 id="\u6162\u6570\u7EC4" tabindex="-1">\u6162\u6570\u7EC4 <a class="header-anchor" href="#\u6162\u6570\u7EC4" aria-hidden="true">#</a></h3><p>\u6162\u6570\u7EC4\u662F\u4E00\u79CD\u5B57\u5178\u7684\u5185\u5B58\u5F62\u5F0F\u3002\u4E0D\u7528\u5F00\u8F9F\u5927\u5757\u8FDE\u7EED\u7684\u5B58\u50A8\u7A7A\u95F4\uFF0C\u8282\u7701\u4E86\u5185\u5B58\uFF0C\u4F46\u662F\u7531\u4E8E\u9700\u8981\u7EF4\u62A4\u8FD9\u6837\u4E00\u4E2A<code>HashTable</code>\uFF0C\u5176\u6548\u7387\u4F1A\u6BD4\u5FEB\u6570\u7EC4\u4F4E\uFF0C<code>V8</code>\u4E2D\u662F\u4EE5<code>Dictionary</code>\u7684\u7ED3\u6784\u5B9E\u73B0\u7684\u6162\u6570\u7EC4\u3002</p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#8B949E;">// v8/src/objects/dictionary.h // line 27</span></span>
<span class="line"><span style="color:#FF7B72;">class</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">Dictionary</span><span style="color:#C9D1D9;"> : </span><span style="color:#FF7B72;">public</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">HashTable</span><span style="color:#C9D1D9;">&lt;</span><span style="color:#FFA657;">Derived</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">Shape</span><span style="color:#C9D1D9;">&gt; {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">typedef</span><span style="color:#C9D1D9;"> HashTable</span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;">Derived, Shape</span><span style="color:#FF7B72;">&gt;</span><span style="color:#C9D1D9;"> DerivedHashTable;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">public:</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">typedef</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">typename</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">Shape</span><span style="color:#C9D1D9;">::</span><span style="color:#FFA657;">Key</span><span style="color:#C9D1D9;"> Key;</span></span>
<span class="line"><span style="color:#8B949E;">    // Returns the value at entry.</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FFA657;">Object</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">ValueAt</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">int</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">entry</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">-&gt;</span><span style="color:#D2A8FF;">get</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">DerivedHashTable</span><span style="color:#C9D1D9;">::</span><span style="color:#D2A8FF;">EntryToIndex</span><span style="color:#C9D1D9;">(entry) </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    // Set the value for entry.</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">void</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">ValueAtPut</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">int</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">entry</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">Object</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">value</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">       </span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">-&gt;</span><span style="color:#D2A8FF;">set</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">DerivedHashTable</span><span style="color:#C9D1D9;">::</span><span style="color:#D2A8FF;">EntryToIndex</span><span style="color:#C9D1D9;">(entry) </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, value);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span></span>
<span class="line"><span style="color:#8B949E;">    // Returns the property details for the property at entry.</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FFA657;">PropertyDetails</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">DetailsAt</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">int</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">entry</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">       </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">Shape</span><span style="color:#C9D1D9;">::</span><span style="color:#D2A8FF;">DetailsAt</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">Derived</span><span style="color:#C9D1D9;">::</span><span style="color:#D2A8FF;">cast</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">*</span><span style="color:#79C0FF;">this</span><span style="color:#C9D1D9;">), entry);</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">    // ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="\u7C7B\u578B\u8F6C\u6362" tabindex="-1">\u7C7B\u578B\u8F6C\u6362 <a class="header-anchor" href="#\u7C7B\u578B\u8F6C\u6362" aria-hidden="true">#</a></h3><h4 id="\u5FEB\u6570\u7EC4\u8F6C\u6162\u6570\u7EC4" tabindex="-1">\u5FEB\u6570\u7EC4\u8F6C\u6162\u6570\u7EC4 <a class="header-anchor" href="#\u5FEB\u6570\u7EC4\u8F6C\u6162\u6570\u7EC4" aria-hidden="true">#</a></h4><p>\u5FEB\u6570\u7EC4\u8F6C\u6362\u4E3A\u6162\u6570\u7EC4\u4E3B\u8981\u6709\u4EE5\u4E0B\u4E24\u79CD\u60C5\u51B5\uFF1A</p><ul><li>\u5F53\u65B0\u5BB9\u91CF\u5927\u4E8E\u7B49\u4E8E<code>3 * 3</code>\u500D\u7684\u6269\u5BB9\u540E\u7684\u5BB9\u91CF\uFF0C\u4F1A\u8F6C\u53D8\u4E3A\u6162\u6570\u7EC4\u3002</li><li>\u5F53\u52A0\u5165\u7684\u7D22\u5F15\u503C<code>index</code>\u6BD4\u5F53\u524D\u5BB9\u91CF<code>capacity</code>\u5DEE\u503C\u5927\u4E8E\u7B49\u4E8E<code>1024</code> \u65F6\uFF0C\u4E5F\u5C31\u662F\u81F3\u5C11\u6709<code>1024</code>\u4E2A<code>HOLEY</code>\u65F6\uFF0C\u5373\u4F1A\u8F6C\u4E3A\u6162\u6570\u7EC4\uFF0C\u4F8B\u5982\u5B9A\u4E49\u4E00\u4E2A\u957F\u5EA6\u4E3A<code>1</code>\u7684\u6570\u7EC4<code>arr</code>\u7136\u540E\u4F7F\u7528<code>arr[2000]=1</code>\u8D4B\u503C\uFF0C\u6B64\u65F6\u6570\u7EC4\u5C31\u4F1A\u88AB\u8F6C\u6362\u4E3A\u6162\u6570\u7EC4\u3002</li></ul><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#8B949E;">// v8/src/objects/js-objects-inl.h // line 992</span></span>
<span class="line"><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">inline</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">bool</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">ShouldConvertToSlowElements</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">JSObject</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">object</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">                                               </span><span style="color:#FF7B72;">uint32_t</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">capacity</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">                                               </span><span style="color:#FF7B72;">uint32_t</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">index</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">                                               </span><span style="color:#FF7B72;">uint32_t*</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">new_capacity</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#D2A8FF;">STATIC_ASSERT</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">JSObject</span><span style="color:#C9D1D9;">::kMaxUncheckedOldFastElementsLength </span><span style="color:#FF7B72;">&lt;=</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#FFA657;">JSObject</span><span style="color:#C9D1D9;">::kMaxUncheckedFastElementsLength);</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (index </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;"> capacity) {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">new_capacity </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> capacity;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  }</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (index </span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;"> capacity </span><span style="color:#FF7B72;">&gt;=</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">JSObject</span><span style="color:#C9D1D9;">::kMaxGap) </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">;</span><span style="color:#8B949E;"> // \u7B2C\u4E8C\u79CD\u8F6C\u6362</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">new_capacity </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">JSObject</span><span style="color:#C9D1D9;">::</span><span style="color:#D2A8FF;">NewElementsCapacity</span><span style="color:#C9D1D9;">(index </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#D2A8FF;">DCHECK_LT</span><span style="color:#C9D1D9;">(index, </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">new_capacity);</span></span>
<span class="line"><span style="color:#8B949E;">  // TODO(ulan): Check if it works with young large objects.</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (</span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">new_capacity </span><span style="color:#FF7B72;">&lt;=</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">JSObject</span><span style="color:#C9D1D9;">::kMaxUncheckedOldFastElementsLength </span><span style="color:#FF7B72;">||</span></span>
<span class="line"><span style="color:#C9D1D9;">      (</span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">new_capacity </span><span style="color:#FF7B72;">&lt;=</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">JSObject</span><span style="color:#C9D1D9;">::kMaxUncheckedFastElementsLength </span><span style="color:#FF7B72;">&amp;&amp;</span></span>
<span class="line"><span style="color:#C9D1D9;">       </span><span style="color:#D2A8FF;">ObjectInYoungGeneration</span><span style="color:#C9D1D9;">(object))) {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  }</span></span>
<span class="line"><span style="color:#8B949E;">  // If the fast-case backing storage takes up much more memory than a</span></span>
<span class="line"><span style="color:#8B949E;">  // dictionary backing storage would, the object should have slow elements.</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">int</span><span style="color:#C9D1D9;"> used_elements </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> object-&gt;</span><span style="color:#D2A8FF;">GetFastElementsUsage</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">uint32_t</span><span style="color:#C9D1D9;"> size_threshold </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">NumberDictionary</span><span style="color:#C9D1D9;">::kPreferFastElementsSizeFactor </span><span style="color:#FF7B72;">*</span></span>
<span class="line"><span style="color:#C9D1D9;">                            </span><span style="color:#FFA657;">NumberDictionary</span><span style="color:#C9D1D9;">::</span><span style="color:#D2A8FF;">ComputeCapacity</span><span style="color:#C9D1D9;">(used_elements) </span><span style="color:#FF7B72;">*</span></span>
<span class="line"><span style="color:#C9D1D9;">                            </span><span style="color:#FFA657;">NumberDictionary</span><span style="color:#C9D1D9;">::kEntrySize;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> size_threshold </span><span style="color:#FF7B72;">&lt;=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">new_capacity;</span><span style="color:#8B949E;"> // \u7B2C\u4E00\u79CD\u8F6C\u6362</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">// v8/src/objects/js-objects.h // line 738</span></span>
<span class="line"><span style="color:#8B949E;">// JSObject::kMaxGap \u5E38\u91CF</span></span>
<span class="line"><span style="color:#8B949E;">// Maximal gap that can be introduced by adding an element beyond</span></span>
<span class="line"><span style="color:#8B949E;">// the current elements length.</span></span>
<span class="line"><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">uint32_t</span><span style="color:#C9D1D9;"> kMaxGap </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1024</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">// v8/src/objects/dictionary.h // line 362</span></span>
<span class="line"><span style="color:#8B949E;">// NumberDictionary::kPreferFastElementsSizeFactor \u5E38\u91CF</span></span>
<span class="line"><span style="color:#8B949E;">// JSObjects prefer dictionary elements if the dictionary saves this much</span></span>
<span class="line"><span style="color:#8B949E;">// memory compared to a fast elements backing store.</span></span>
<span class="line"><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">uint32_t</span><span style="color:#C9D1D9;"> kPreferFastElementsSizeFactor </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">// v8/src/objects/hash-table-inl.h // line 76</span></span>
<span class="line"><span style="color:#8B949E;">// NumberDictionary::ComputeCapacity(used_elements)</span></span>
<span class="line"><span style="color:#8B949E;">// NumberDictionary \u7EE7\u627F\u4E8E Dictionary \u518D\u7EE7\u627F\u4E8E HashTable</span></span>
<span class="line"><span style="color:#8B949E;">// static</span></span>
<span class="line"><span style="color:#FF7B72;">int</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">HashTableBase</span><span style="color:#C9D1D9;">::</span><span style="color:#D2A8FF;">ComputeCapacity</span><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">int</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">at_least_space_for</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#8B949E;">  // Add 50% slack to make slot collisions sufficiently unlikely.</span></span>
<span class="line"><span style="color:#8B949E;">  // See matching computation in HashTable::HasSufficientCapacityToAdd().</span></span>
<span class="line"><span style="color:#8B949E;">  // Must be kept in sync with CodeStubAssembler::HashTableComputeCapacity().</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">int</span><span style="color:#C9D1D9;"> raw_cap </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> at_least_space_for </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> (at_least_space_for </span><span style="color:#FF7B72;">&gt;&gt;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">int</span><span style="color:#C9D1D9;"> capacity </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">base</span><span style="color:#C9D1D9;">::</span><span style="color:#FFA657;">bits</span><span style="color:#C9D1D9;">::</span><span style="color:#D2A8FF;">RoundUpToPowerOfTwo32</span><span style="color:#C9D1D9;">(raw_cap);</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Max</span><span style="color:#C9D1D9;">(capacity, kMinCapacity);</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">// v8/src/objects/dictionary.h // line 260</span></span>
<span class="line"><span style="color:#8B949E;">// NumberDictionary::kEntrySize \u5E38\u91CF</span></span>
<span class="line"><span style="color:#8B949E;">// NumberDictionary \u7EE7\u627F Dictionary \u4F20\u5165 NumberDictionaryShape\u4F5C\u4E3AShape \u7EE7\u627FHashTable </span></span>
<span class="line"><span style="color:#8B949E;">// HashTable \u4E2D\u5B9A\u4E49 static const int kEntrySize = Shape::kEntrySize;</span></span>
<span class="line"><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">int</span><span style="color:#C9D1D9;"> kEntrySize </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><h4 id="\u6162\u6570\u7EC4\u8F6C\u5FEB\u6570\u7EC4" tabindex="-1">\u6162\u6570\u7EC4\u8F6C\u5FEB\u6570\u7EC4 <a class="header-anchor" href="#\u6162\u6570\u7EC4\u8F6C\u5FEB\u6570\u7EC4" aria-hidden="true">#</a></h4><p>\u5F53\u6162\u6570\u7EC4\u7684\u5143\u7D20\u53EF\u5B58\u653E\u5728\u5FEB\u6570\u7EC4\u4E2D\u4E14\u957F\u5EA6\u5C0F\u4E8E<code>Smi::kMaxValue</code>\u4E14\u5BF9\u4E8E\u5FEB\u6570\u7EC4\u4EC5\u8282\u7701\u4E86<code>50%</code>\u7684\u7A7A\u95F4\uFF0C\u5219\u4F1A\u8F6C\u53D8\u4E3A\u5FEB\u6570\u7EC4\u3002</p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#8B949E;">// v8/src/objects/js-objects.cc // line 4523</span></span>
<span class="line"><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">bool</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">ShouldConvertToFastElements</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">JSObject</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">object</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">                                        </span><span style="color:#FFA657;">NumberDictionary</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">dictionary</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">                                        </span><span style="color:#FF7B72;">uint32_t</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">index</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">                                        </span><span style="color:#FF7B72;">uint32_t*</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">new_capacity</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#8B949E;">  // If properties with non-standard attributes or accessors were added, we</span></span>
<span class="line"><span style="color:#8B949E;">  // cannot go back to fast elements.</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (dictionary-&gt;</span><span style="color:#D2A8FF;">requires_slow_elements</span><span style="color:#C9D1D9;">()) </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">  // Adding a property with this index will require slow elements.</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (index </span><span style="color:#FF7B72;">&gt;=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static_cast&lt;uint32_t&gt;</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">Smi</span><span style="color:#C9D1D9;">::kMaxValue)) </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (object-&gt;</span><span style="color:#D2A8FF;">IsJSArray</span><span style="color:#C9D1D9;">()) {</span></span>
<span class="line"><span style="color:#C9D1D9;">    Object length </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">JSArray</span><span style="color:#C9D1D9;">::</span><span style="color:#D2A8FF;">cast</span><span style="color:#C9D1D9;">(object)-&gt;</span><span style="color:#D2A8FF;">length</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (</span><span style="color:#FF7B72;">!</span><span style="color:#C9D1D9;">length-&gt;</span><span style="color:#D2A8FF;">IsSmi</span><span style="color:#C9D1D9;">()) </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">new_capacity </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static_cast&lt;uint32_t&gt;</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">Smi</span><span style="color:#C9D1D9;">::</span><span style="color:#D2A8FF;">ToInt</span><span style="color:#C9D1D9;">(length));</span></span>
<span class="line"><span style="color:#C9D1D9;">  } </span><span style="color:#FF7B72;">else</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (object-&gt;</span><span style="color:#D2A8FF;">IsJSSloppyArgumentsObject</span><span style="color:#C9D1D9;">()) {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  } </span><span style="color:#FF7B72;">else</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">new_capacity </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> dictionary-&gt;</span><span style="color:#D2A8FF;">max_number_key</span><span style="color:#C9D1D9;">() </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  }</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">new_capacity </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Max</span><span style="color:#C9D1D9;">(index </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">new_capacity);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">uint32_t</span><span style="color:#C9D1D9;"> dictionary_size </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">static_cast&lt;uint32_t&gt;</span><span style="color:#C9D1D9;">(dictionary-&gt;</span><span style="color:#D2A8FF;">Capacity</span><span style="color:#C9D1D9;">()) </span><span style="color:#FF7B72;">*</span></span>
<span class="line"><span style="color:#C9D1D9;">                             </span><span style="color:#FFA657;">NumberDictionary</span><span style="color:#C9D1D9;">::kEntrySize;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">  // Turn fast if the dictionary only saves 50% space.</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> dictionary_size </span><span style="color:#FF7B72;">&gt;=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">new_capacity;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">// v8/src/objects/smi.h // line 106</span></span>
<span class="line"><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">constexpr</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">int</span><span style="color:#C9D1D9;"> kMaxValue </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> kSmiMaxValue;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">// v8/include/v8-internal.h // line 87</span></span>
<span class="line"><span style="color:#FF7B72;">static</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">constexpr</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">intptr_t</span><span style="color:#C9D1D9;"> kSmiMaxValue </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;">(kSmiMinValue </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h2 id="\u53C2\u8003" tabindex="-1">\u53C2\u8003 <a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a></h2><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#c9d1d9;">https://v8.js.cn/blog/elements-kinds/</span></span>
<span class="line"><span style="color:#c9d1d9;">https://github.com/JunreyCen/blog/issues/10</span></span>
<span class="line"><span style="color:#c9d1d9;">https://juejin.im/post/5e1d919f5188254c3c275145</span></span>
<span class="line"><span style="color:#c9d1d9;">https://juejin.im/post/5df1e21bf265da33c24fe9f4</span></span>
<span class="line"><span style="color:#c9d1d9;">https://juejin.im/entry/5a9c0b606fb9a028d663a491</span></span>
<span class="line"><span style="color:#c9d1d9;">https://juejin.im/entry/59ae664d518825244d207196</span></span>
<span class="line"><span style="color:#c9d1d9;">https://blog.csdn.net/github_34708151/article/details/105463108</span></span>
<span class="line"><span style="color:#c9d1d9;">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Typed_arrays</span></span>
<span class="line"><span style="color:#c9d1d9;">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer</span></span>
<span class="line"><span style="color:#c9d1d9;">https://stackoverflow.com/questions/46526520/why-are-we-allowed-to-create-sparse-arrays-in-javascript</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,45),o=[e];function c(r,t,y,D,i,F){return a(),n("div",null,o)}const d=s(p,[["render",c]]);export{b as __pageData,d as default};
